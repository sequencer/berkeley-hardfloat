circuit ValExec_MulAddRecFN_mul :
  module MulAddRecFNToRaw_preMul :
    output io : { flip op : UInt<2>, flip a : UInt<17>, flip b : UInt<17>, flip c : UInt<17>, mulAddA : UInt<11>, mulAddB : UInt<11>, mulAddC : UInt<22>, toPostMul : { isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<7>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<4>, highAlignedSigC : UInt<13>, bit0AlignedSigC : UInt<1>}}
  
    io is invalid
    node _T = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node _T_12 = eq(_T_2, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _T_13 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node _T_14 = cat(UInt<1>("h0"), _T_12) @[Cat.scala 29:58]
    node _T_15 = cat(_T_14, _T_13) @[Cat.scala 29:58]
    rawA.sig <= _T_15 @[rawFloatFromRecFN.scala 60:20]
    node _T_16 = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _T_17 = bits(_T_16, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node _T_18 = eq(_T_17, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _T_19 = bits(_T_16, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node _T_20 = eq(_T_19, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_21 = bits(_T_16, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _T_22 = and(_T_20, _T_21) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_22 @[rawFloatFromRecFN.scala 55:20]
    node _T_23 = bits(_T_16, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _T_24 = eq(_T_23, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _T_25 = and(_T_20, _T_24) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_25 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_18 @[rawFloatFromRecFN.scala 57:20]
    node _T_26 = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_26 @[rawFloatFromRecFN.scala 58:20]
    node _T_27 = cvt(_T_16) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_27 @[rawFloatFromRecFN.scala 59:20]
    node _T_28 = eq(_T_18, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _T_29 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node _T_30 = cat(UInt<1>("h0"), _T_28) @[Cat.scala 29:58]
    node _T_31 = cat(_T_30, _T_29) @[Cat.scala 29:58]
    rawB.sig <= _T_31 @[rawFloatFromRecFN.scala 60:20]
    node _T_32 = bits(io.c, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _T_33 = bits(_T_32, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node _T_34 = eq(_T_33, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _T_35 = bits(_T_32, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node _T_36 = eq(_T_35, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire rawC : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    rawC is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_37 = bits(_T_32, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _T_38 = and(_T_36, _T_37) @[rawFloatFromRecFN.scala 55:33]
    rawC.isNaN <= _T_38 @[rawFloatFromRecFN.scala 55:20]
    node _T_39 = bits(_T_32, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _T_40 = eq(_T_39, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _T_41 = and(_T_36, _T_40) @[rawFloatFromRecFN.scala 56:33]
    rawC.isInf <= _T_41 @[rawFloatFromRecFN.scala 56:20]
    rawC.isZero <= _T_34 @[rawFloatFromRecFN.scala 57:20]
    node _T_42 = bits(io.c, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    rawC.sign <= _T_42 @[rawFloatFromRecFN.scala 58:20]
    node _T_43 = cvt(_T_32) @[rawFloatFromRecFN.scala 59:27]
    rawC.sExp <= _T_43 @[rawFloatFromRecFN.scala 59:20]
    node _T_44 = eq(_T_34, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _T_45 = bits(io.c, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node _T_46 = cat(UInt<1>("h0"), _T_44) @[Cat.scala 29:58]
    node _T_47 = cat(_T_46, _T_45) @[Cat.scala 29:58]
    rawC.sig <= _T_47 @[rawFloatFromRecFN.scala 60:20]
    node _T_48 = xor(rawA.sign, rawB.sign) @[MulAddRecFN.scala 98:30]
    node _T_49 = bits(io.op, 1, 1) @[MulAddRecFN.scala 98:49]
    node signProd = xor(_T_48, _T_49) @[MulAddRecFN.scala 98:42]
    node _T_50 = add(rawA.sExp, rawB.sExp) @[MulAddRecFN.scala 101:19]
    node _T_51 = add(_T_50, asSInt(UInt<6>("h2e"))) @[MulAddRecFN.scala 101:32]
    node _T_52 = tail(_T_51, 1) @[MulAddRecFN.scala 101:32]
    node sExpAlignedProd = asSInt(_T_52) @[MulAddRecFN.scala 101:32]
    node _T_53 = xor(signProd, rawC.sign) @[MulAddRecFN.scala 103:30]
    node _T_54 = bits(io.op, 0, 0) @[MulAddRecFN.scala 103:49]
    node doSubMags = xor(_T_53, _T_54) @[MulAddRecFN.scala 103:42]
    node _T_55 = sub(sExpAlignedProd, rawC.sExp) @[MulAddRecFN.scala 107:42]
    node _T_56 = tail(_T_55, 1) @[MulAddRecFN.scala 107:42]
    node sNatCAlignDist = asSInt(_T_56) @[MulAddRecFN.scala 107:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 6, 0) @[MulAddRecFN.scala 108:42]
    node _T_57 = or(rawA.isZero, rawB.isZero) @[MulAddRecFN.scala 109:35]
    node _T_58 = lt(sNatCAlignDist, asSInt(UInt<1>("h0"))) @[MulAddRecFN.scala 109:69]
    node isMinCAlign = or(_T_57, _T_58) @[MulAddRecFN.scala 109:50]
    node _T_59 = eq(rawC.isZero, UInt<1>("h0")) @[MulAddRecFN.scala 111:9]
    node _T_60 = leq(posNatCAlignDist, UInt<4>("hb")) @[MulAddRecFN.scala 111:60]
    node _T_61 = or(isMinCAlign, _T_60) @[MulAddRecFN.scala 111:39]
    node CIsDominant = and(_T_59, _T_61) @[MulAddRecFN.scala 111:23]
    node _T_62 = lt(posNatCAlignDist, UInt<6>("h23")) @[MulAddRecFN.scala 115:34]
    node _T_63 = bits(posNatCAlignDist, 5, 0) @[MulAddRecFN.scala 116:33]
    node _T_64 = mux(_T_62, _T_63, UInt<6>("h23")) @[MulAddRecFN.scala 115:16]
    node CAlignDist = mux(isMinCAlign, UInt<1>("h0"), _T_64) @[MulAddRecFN.scala 113:12]
    node _T_65 = not(rawC.sig) @[MulAddRecFN.scala 121:28]
    node _T_66 = mux(doSubMags, _T_65, rawC.sig) @[MulAddRecFN.scala 121:16]
    node _T_67 = bits(doSubMags, 0, 0) @[Bitwise.scala 72:15]
    node _T_68 = mux(_T_67, UInt<27>("h7ffffff"), UInt<27>("h0")) @[Bitwise.scala 72:12]
    node _T_69 = cat(_T_66, _T_68) @[Cat.scala 29:58]
    node _T_70 = asSInt(_T_69) @[MulAddRecFN.scala 123:11]
    node mainAlignedSigC = dshr(_T_70, CAlignDist) @[MulAddRecFN.scala 123:17]
    node _T_71 = shl(rawC.sig, 0) @[MulAddRecFN.scala 125:30]
    wire _T_72 : UInt<1>[3] @[primitives.scala 119:30]
    _T_72 is invalid @[primitives.scala 119:30]
    node _T_73 = bits(_T_71, 3, 0) @[primitives.scala 121:33]
    node _T_74 = orr(_T_73) @[primitives.scala 121:54]
    _T_72[0] <= _T_74 @[primitives.scala 121:28]
    node _T_75 = bits(_T_71, 7, 4) @[primitives.scala 121:33]
    node _T_76 = orr(_T_75) @[primitives.scala 121:54]
    _T_72[1] <= _T_76 @[primitives.scala 121:28]
    node _T_77 = bits(_T_71, 11, 8) @[primitives.scala 124:15]
    node _T_78 = orr(_T_77) @[primitives.scala 124:57]
    _T_72[2] <= _T_78 @[primitives.scala 123:38]
    node _T_79 = cat(_T_72[2], _T_72[1]) @[primitives.scala 125:20]
    node _T_80 = cat(_T_79, _T_72[0]) @[primitives.scala 125:20]
    node _T_81 = shr(CAlignDist, 2) @[MulAddRecFN.scala 127:28]
    node _T_82 = dshr(asSInt(UInt<17>("h10000")), _T_81) @[primitives.scala 77:58]
    node _T_83 = bits(_T_82, 9, 8) @[primitives.scala 79:22]
    node _T_84 = bits(_T_83, 0, 0) @[Bitwise.scala 109:18]
    node _T_85 = bits(_T_83, 1, 1) @[Bitwise.scala 109:44]
    node _T_86 = cat(_T_84, _T_85) @[Cat.scala 29:58]
    node _T_87 = and(_T_80, _T_86) @[MulAddRecFN.scala 125:68]
    node reduced4CExtra = orr(_T_87) @[MulAddRecFN.scala 133:11]
    node _T_88 = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 135:28]
    node _T_89 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 137:32]
    node _T_90 = andr(_T_89) @[MulAddRecFN.scala 137:39]
    node _T_91 = eq(reduced4CExtra, UInt<1>("h0")) @[MulAddRecFN.scala 137:47]
    node _T_92 = and(_T_90, _T_91) @[MulAddRecFN.scala 137:44]
    node _T_93 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 138:32]
    node _T_94 = orr(_T_93) @[MulAddRecFN.scala 138:39]
    node _T_95 = or(_T_94, reduced4CExtra) @[MulAddRecFN.scala 138:44]
    node _T_96 = mux(doSubMags, _T_92, _T_95) @[MulAddRecFN.scala 136:16]
    node _T_97 = asUInt(_T_88) @[Cat.scala 29:58]
    node alignedSigC = cat(_T_97, _T_96) @[Cat.scala 29:58]
    io.mulAddA <= rawA.sig @[MulAddRecFN.scala 144:16]
    io.mulAddB <= rawB.sig @[MulAddRecFN.scala 145:16]
    node _T_98 = bits(alignedSigC, 22, 1) @[MulAddRecFN.scala 146:30]
    io.mulAddC <= _T_98 @[MulAddRecFN.scala 146:16]
    node _T_99 = bits(rawA.sig, 9, 9) @[common.scala 81:56]
    node _T_100 = eq(_T_99, UInt<1>("h0")) @[common.scala 81:49]
    node _T_101 = and(rawA.isNaN, _T_100) @[common.scala 81:46]
    node _T_102 = bits(rawB.sig, 9, 9) @[common.scala 81:56]
    node _T_103 = eq(_T_102, UInt<1>("h0")) @[common.scala 81:49]
    node _T_104 = and(rawB.isNaN, _T_103) @[common.scala 81:46]
    node _T_105 = or(_T_101, _T_104) @[MulAddRecFN.scala 149:32]
    node _T_106 = bits(rawC.sig, 9, 9) @[common.scala 81:56]
    node _T_107 = eq(_T_106, UInt<1>("h0")) @[common.scala 81:49]
    node _T_108 = and(rawC.isNaN, _T_107) @[common.scala 81:46]
    node _T_109 = or(_T_105, _T_108) @[MulAddRecFN.scala 149:58]
    io.toPostMul.isSigNaNAny <= _T_109 @[MulAddRecFN.scala 148:30]
    node _T_110 = or(rawA.isNaN, rawB.isNaN) @[MulAddRecFN.scala 151:42]
    io.toPostMul.isNaNAOrB <= _T_110 @[MulAddRecFN.scala 151:28]
    io.toPostMul.isInfA <= rawA.isInf @[MulAddRecFN.scala 152:28]
    io.toPostMul.isZeroA <= rawA.isZero @[MulAddRecFN.scala 153:28]
    io.toPostMul.isInfB <= rawB.isInf @[MulAddRecFN.scala 154:28]
    io.toPostMul.isZeroB <= rawB.isZero @[MulAddRecFN.scala 155:28]
    io.toPostMul.signProd <= signProd @[MulAddRecFN.scala 156:28]
    io.toPostMul.isNaNC <= rawC.isNaN @[MulAddRecFN.scala 157:28]
    io.toPostMul.isInfC <= rawC.isInf @[MulAddRecFN.scala 158:28]
    io.toPostMul.isZeroC <= rawC.isZero @[MulAddRecFN.scala 159:28]
    node _T_111 = sub(sExpAlignedProd, asSInt(UInt<5>("hb"))) @[MulAddRecFN.scala 161:53]
    node _T_112 = tail(_T_111, 1) @[MulAddRecFN.scala 161:53]
    node _T_113 = asSInt(_T_112) @[MulAddRecFN.scala 161:53]
    node _T_114 = mux(CIsDominant, rawC.sExp, _T_113) @[MulAddRecFN.scala 161:12]
    io.toPostMul.sExpSum <= _T_114 @[MulAddRecFN.scala 160:28]
    io.toPostMul.doSubMags <= doSubMags @[MulAddRecFN.scala 162:28]
    io.toPostMul.CIsDominant <= CIsDominant @[MulAddRecFN.scala 163:30]
    node _T_115 = bits(CAlignDist, 3, 0) @[MulAddRecFN.scala 164:47]
    io.toPostMul.CDom_CAlignDist <= _T_115 @[MulAddRecFN.scala 164:34]
    node _T_116 = bits(alignedSigC, 35, 23) @[MulAddRecFN.scala 166:20]
    io.toPostMul.highAlignedSigC <= _T_116 @[MulAddRecFN.scala 165:34]
    node _T_117 = bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 167:48]
    io.toPostMul.bit0AlignedSigC <= _T_117 @[MulAddRecFN.scala 167:34]

  module MulAddRecFNToRaw_postMul :
    output io : { flip fromPreMul : { isSigNaNAny : UInt<1>, isNaNAOrB : UInt<1>, isInfA : UInt<1>, isZeroA : UInt<1>, isInfB : UInt<1>, isZeroB : UInt<1>, signProd : UInt<1>, isNaNC : UInt<1>, isInfC : UInt<1>, isZeroC : UInt<1>, sExpSum : SInt<7>, doSubMags : UInt<1>, CIsDominant : UInt<1>, CDom_CAlignDist : UInt<4>, highAlignedSigC : UInt<13>, bit0AlignedSigC : UInt<1>}, flip mulAddResult : UInt<23>, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}
  
    io is invalid
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[MulAddRecFN.scala 188:45]
    node CDom_sign = xor(io.fromPreMul.signProd, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 192:42]
    node _T = bits(io.mulAddResult, 22, 22) @[MulAddRecFN.scala 194:32]
    node _T_1 = add(io.fromPreMul.highAlignedSigC, UInt<1>("h1")) @[MulAddRecFN.scala 195:47]
    node _T_2 = tail(_T_1, 1) @[MulAddRecFN.scala 195:47]
    node _T_3 = mux(_T, _T_2, io.fromPreMul.highAlignedSigC) @[MulAddRecFN.scala 194:16]
    node _T_4 = bits(io.mulAddResult, 21, 0) @[MulAddRecFN.scala 198:28]
    node _T_5 = cat(_T_3, _T_4) @[Cat.scala 29:58]
    node sigSum = cat(_T_5, io.fromPreMul.bit0AlignedSigC) @[Cat.scala 29:58]
    node _T_6 = cvt(io.fromPreMul.doSubMags) @[MulAddRecFN.scala 205:69]
    node _T_7 = sub(io.fromPreMul.sExpSum, _T_6) @[MulAddRecFN.scala 205:43]
    node _T_8 = tail(_T_7, 1) @[MulAddRecFN.scala 205:43]
    node CDom_sExp = asSInt(_T_8) @[MulAddRecFN.scala 205:43]
    node _T_9 = bits(sigSum, 35, 12) @[MulAddRecFN.scala 208:20]
    node _T_10 = not(_T_9) @[MulAddRecFN.scala 208:13]
    node _T_11 = bits(io.fromPreMul.highAlignedSigC, 12, 11) @[MulAddRecFN.scala 211:46]
    node _T_12 = bits(sigSum, 33, 13) @[MulAddRecFN.scala 212:23]
    node _T_13 = cat(UInt<1>("h0"), _T_11) @[Cat.scala 29:58]
    node _T_14 = cat(_T_13, _T_12) @[Cat.scala 29:58]
    node CDom_absSigSum = mux(io.fromPreMul.doSubMags, _T_10, _T_14) @[MulAddRecFN.scala 207:12]
    node _T_15 = bits(sigSum, 11, 1) @[MulAddRecFN.scala 217:21]
    node _T_16 = not(_T_15) @[MulAddRecFN.scala 217:14]
    node _T_17 = orr(_T_16) @[MulAddRecFN.scala 217:36]
    node _T_18 = bits(sigSum, 12, 1) @[MulAddRecFN.scala 218:19]
    node _T_19 = orr(_T_18) @[MulAddRecFN.scala 218:37]
    node CDom_absSigSumExtra = mux(io.fromPreMul.doSubMags, _T_17, _T_19) @[MulAddRecFN.scala 216:12]
    node _T_20 = dshl(CDom_absSigSum, io.fromPreMul.CDom_CAlignDist) @[MulAddRecFN.scala 221:24]
    node CDom_mainSig = bits(_T_20, 23, 8) @[MulAddRecFN.scala 221:56]
    node _T_21 = bits(CDom_absSigSum, 10, 0) @[MulAddRecFN.scala 224:36]
    node _T_22 = shl(_T_21, 0) @[MulAddRecFN.scala 224:53]
    wire _T_23 : UInt<1>[3] @[primitives.scala 119:30]
    _T_23 is invalid @[primitives.scala 119:30]
    node _T_24 = bits(_T_22, 3, 0) @[primitives.scala 121:33]
    node _T_25 = orr(_T_24) @[primitives.scala 121:54]
    _T_23[0] <= _T_25 @[primitives.scala 121:28]
    node _T_26 = bits(_T_22, 7, 4) @[primitives.scala 121:33]
    node _T_27 = orr(_T_26) @[primitives.scala 121:54]
    _T_23[1] <= _T_27 @[primitives.scala 121:28]
    node _T_28 = bits(_T_22, 10, 8) @[primitives.scala 124:15]
    node _T_29 = orr(_T_28) @[primitives.scala 124:57]
    _T_23[2] <= _T_29 @[primitives.scala 123:38]
    node _T_30 = cat(_T_23[2], _T_23[1]) @[primitives.scala 125:20]
    node _T_31 = cat(_T_30, _T_23[0]) @[primitives.scala 125:20]
    node _T_32 = shr(io.fromPreMul.CDom_CAlignDist, 2) @[MulAddRecFN.scala 225:51]
    node _T_33 = not(_T_32) @[primitives.scala 51:21]
    node _T_34 = dshr(asSInt(UInt<5>("h10")), _T_33) @[primitives.scala 77:58]
    node _T_35 = bits(_T_34, 2, 1) @[primitives.scala 79:22]
    node _T_36 = bits(_T_35, 0, 0) @[Bitwise.scala 109:18]
    node _T_37 = bits(_T_35, 1, 1) @[Bitwise.scala 109:44]
    node _T_38 = cat(_T_36, _T_37) @[Cat.scala 29:58]
    node _T_39 = and(_T_31, _T_38) @[MulAddRecFN.scala 224:72]
    node CDom_reduced4SigExtra = orr(_T_39) @[MulAddRecFN.scala 225:73]
    node _T_40 = shr(CDom_mainSig, 3) @[MulAddRecFN.scala 227:25]
    node _T_41 = bits(CDom_mainSig, 2, 0) @[MulAddRecFN.scala 228:25]
    node _T_42 = orr(_T_41) @[MulAddRecFN.scala 228:32]
    node _T_43 = or(_T_42, CDom_reduced4SigExtra) @[MulAddRecFN.scala 228:36]
    node _T_44 = or(_T_43, CDom_absSigSumExtra) @[MulAddRecFN.scala 228:61]
    node CDom_sig = cat(_T_40, _T_44) @[Cat.scala 29:58]
    node notCDom_signSigSum = bits(sigSum, 25, 25) @[MulAddRecFN.scala 234:36]
    node _T_45 = bits(sigSum, 24, 0) @[MulAddRecFN.scala 237:20]
    node _T_46 = not(_T_45) @[MulAddRecFN.scala 237:13]
    node _T_47 = bits(sigSum, 24, 0) @[MulAddRecFN.scala 238:19]
    node _T_48 = add(_T_47, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 238:41]
    node _T_49 = tail(_T_48, 1) @[MulAddRecFN.scala 238:41]
    node notCDom_absSigSum = mux(notCDom_signSigSum, _T_46, _T_49) @[MulAddRecFN.scala 236:12]
    wire _T_50 : UInt<1>[13] @[primitives.scala 102:30]
    _T_50 is invalid @[primitives.scala 102:30]
    node _T_51 = bits(notCDom_absSigSum, 1, 0) @[primitives.scala 104:33]
    node _T_52 = orr(_T_51) @[primitives.scala 104:54]
    _T_50[0] <= _T_52 @[primitives.scala 104:28]
    node _T_53 = bits(notCDom_absSigSum, 3, 2) @[primitives.scala 104:33]
    node _T_54 = orr(_T_53) @[primitives.scala 104:54]
    _T_50[1] <= _T_54 @[primitives.scala 104:28]
    node _T_55 = bits(notCDom_absSigSum, 5, 4) @[primitives.scala 104:33]
    node _T_56 = orr(_T_55) @[primitives.scala 104:54]
    _T_50[2] <= _T_56 @[primitives.scala 104:28]
    node _T_57 = bits(notCDom_absSigSum, 7, 6) @[primitives.scala 104:33]
    node _T_58 = orr(_T_57) @[primitives.scala 104:54]
    _T_50[3] <= _T_58 @[primitives.scala 104:28]
    node _T_59 = bits(notCDom_absSigSum, 9, 8) @[primitives.scala 104:33]
    node _T_60 = orr(_T_59) @[primitives.scala 104:54]
    _T_50[4] <= _T_60 @[primitives.scala 104:28]
    node _T_61 = bits(notCDom_absSigSum, 11, 10) @[primitives.scala 104:33]
    node _T_62 = orr(_T_61) @[primitives.scala 104:54]
    _T_50[5] <= _T_62 @[primitives.scala 104:28]
    node _T_63 = bits(notCDom_absSigSum, 13, 12) @[primitives.scala 104:33]
    node _T_64 = orr(_T_63) @[primitives.scala 104:54]
    _T_50[6] <= _T_64 @[primitives.scala 104:28]
    node _T_65 = bits(notCDom_absSigSum, 15, 14) @[primitives.scala 104:33]
    node _T_66 = orr(_T_65) @[primitives.scala 104:54]
    _T_50[7] <= _T_66 @[primitives.scala 104:28]
    node _T_67 = bits(notCDom_absSigSum, 17, 16) @[primitives.scala 104:33]
    node _T_68 = orr(_T_67) @[primitives.scala 104:54]
    _T_50[8] <= _T_68 @[primitives.scala 104:28]
    node _T_69 = bits(notCDom_absSigSum, 19, 18) @[primitives.scala 104:33]
    node _T_70 = orr(_T_69) @[primitives.scala 104:54]
    _T_50[9] <= _T_70 @[primitives.scala 104:28]
    node _T_71 = bits(notCDom_absSigSum, 21, 20) @[primitives.scala 104:33]
    node _T_72 = orr(_T_71) @[primitives.scala 104:54]
    _T_50[10] <= _T_72 @[primitives.scala 104:28]
    node _T_73 = bits(notCDom_absSigSum, 23, 22) @[primitives.scala 104:33]
    node _T_74 = orr(_T_73) @[primitives.scala 104:54]
    _T_50[11] <= _T_74 @[primitives.scala 104:28]
    node _T_75 = bits(notCDom_absSigSum, 24, 24) @[primitives.scala 107:15]
    node _T_76 = orr(_T_75) @[primitives.scala 107:57]
    _T_50[12] <= _T_76 @[primitives.scala 106:38]
    node _T_77 = cat(_T_50[2], _T_50[1]) @[primitives.scala 108:20]
    node _T_78 = cat(_T_77, _T_50[0]) @[primitives.scala 108:20]
    node _T_79 = cat(_T_50[5], _T_50[4]) @[primitives.scala 108:20]
    node _T_80 = cat(_T_79, _T_50[3]) @[primitives.scala 108:20]
    node _T_81 = cat(_T_80, _T_78) @[primitives.scala 108:20]
    node _T_82 = cat(_T_50[8], _T_50[7]) @[primitives.scala 108:20]
    node _T_83 = cat(_T_82, _T_50[6]) @[primitives.scala 108:20]
    node _T_84 = cat(_T_50[10], _T_50[9]) @[primitives.scala 108:20]
    node _T_85 = cat(_T_50[12], _T_50[11]) @[primitives.scala 108:20]
    node _T_86 = cat(_T_85, _T_84) @[primitives.scala 108:20]
    node _T_87 = cat(_T_86, _T_83) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum = cat(_T_87, _T_81) @[primitives.scala 108:20]
    node _T_88 = bits(notCDom_reduced2AbsSigSum, 0, 0) @[primitives.scala 92:52]
    node _T_89 = bits(notCDom_reduced2AbsSigSum, 1, 1) @[primitives.scala 92:52]
    node _T_90 = bits(notCDom_reduced2AbsSigSum, 2, 2) @[primitives.scala 92:52]
    node _T_91 = bits(notCDom_reduced2AbsSigSum, 3, 3) @[primitives.scala 92:52]
    node _T_92 = bits(notCDom_reduced2AbsSigSum, 4, 4) @[primitives.scala 92:52]
    node _T_93 = bits(notCDom_reduced2AbsSigSum, 5, 5) @[primitives.scala 92:52]
    node _T_94 = bits(notCDom_reduced2AbsSigSum, 6, 6) @[primitives.scala 92:52]
    node _T_95 = bits(notCDom_reduced2AbsSigSum, 7, 7) @[primitives.scala 92:52]
    node _T_96 = bits(notCDom_reduced2AbsSigSum, 8, 8) @[primitives.scala 92:52]
    node _T_97 = bits(notCDom_reduced2AbsSigSum, 9, 9) @[primitives.scala 92:52]
    node _T_98 = bits(notCDom_reduced2AbsSigSum, 10, 10) @[primitives.scala 92:52]
    node _T_99 = bits(notCDom_reduced2AbsSigSum, 11, 11) @[primitives.scala 92:52]
    node _T_100 = bits(notCDom_reduced2AbsSigSum, 12, 12) @[primitives.scala 92:52]
    node _T_101 = mux(_T_89, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _T_102 = mux(_T_90, UInt<4>("ha"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_91, UInt<4>("h9"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_92, UInt<4>("h8"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_93, UInt<3>("h7"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_94, UInt<3>("h6"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_95, UInt<3>("h5"), _T_106) @[Mux.scala 47:69]
    node _T_108 = mux(_T_96, UInt<3>("h4"), _T_107) @[Mux.scala 47:69]
    node _T_109 = mux(_T_97, UInt<2>("h3"), _T_108) @[Mux.scala 47:69]
    node _T_110 = mux(_T_98, UInt<2>("h2"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_99, UInt<1>("h1"), _T_110) @[Mux.scala 47:69]
    node notCDom_normDistReduced2 = mux(_T_100, UInt<1>("h0"), _T_111) @[Mux.scala 47:69]
    node notCDom_nearNormDist = shl(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 242:56]
    node _T_112 = cvt(notCDom_nearNormDist) @[MulAddRecFN.scala 243:69]
    node _T_113 = sub(io.fromPreMul.sExpSum, _T_112) @[MulAddRecFN.scala 243:46]
    node _T_114 = tail(_T_113, 1) @[MulAddRecFN.scala 243:46]
    node notCDom_sExp = asSInt(_T_114) @[MulAddRecFN.scala 243:46]
    node _T_115 = dshl(notCDom_absSigSum, notCDom_nearNormDist) @[MulAddRecFN.scala 245:27]
    node notCDom_mainSig = bits(_T_115, 25, 10) @[MulAddRecFN.scala 245:50]
    node _T_116 = bits(notCDom_reduced2AbsSigSum, 5, 0) @[MulAddRecFN.scala 249:39]
    node _T_117 = shl(_T_116, 1) @[MulAddRecFN.scala 249:55]
    wire _T_118 : UInt<1>[4] @[primitives.scala 102:30]
    _T_118 is invalid @[primitives.scala 102:30]
    node _T_119 = bits(_T_117, 1, 0) @[primitives.scala 104:33]
    node _T_120 = orr(_T_119) @[primitives.scala 104:54]
    _T_118[0] <= _T_120 @[primitives.scala 104:28]
    node _T_121 = bits(_T_117, 3, 2) @[primitives.scala 104:33]
    node _T_122 = orr(_T_121) @[primitives.scala 104:54]
    _T_118[1] <= _T_122 @[primitives.scala 104:28]
    node _T_123 = bits(_T_117, 5, 4) @[primitives.scala 104:33]
    node _T_124 = orr(_T_123) @[primitives.scala 104:54]
    _T_118[2] <= _T_124 @[primitives.scala 104:28]
    node _T_125 = bits(_T_117, 6, 6) @[primitives.scala 107:15]
    node _T_126 = orr(_T_125) @[primitives.scala 107:57]
    _T_118[3] <= _T_126 @[primitives.scala 106:38]
    node _T_127 = cat(_T_118[1], _T_118[0]) @[primitives.scala 108:20]
    node _T_128 = cat(_T_118[3], _T_118[2]) @[primitives.scala 108:20]
    node _T_129 = cat(_T_128, _T_127) @[primitives.scala 108:20]
    node _T_130 = shr(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 250:46]
    node _T_131 = not(_T_130) @[primitives.scala 51:21]
    node _T_132 = dshr(asSInt(UInt<9>("h100")), _T_131) @[primitives.scala 77:58]
    node _T_133 = bits(_T_132, 3, 1) @[primitives.scala 79:22]
    node _T_134 = bits(_T_133, 1, 0) @[Bitwise.scala 109:18]
    node _T_135 = bits(_T_134, 0, 0) @[Bitwise.scala 109:18]
    node _T_136 = bits(_T_134, 1, 1) @[Bitwise.scala 109:44]
    node _T_137 = cat(_T_135, _T_136) @[Cat.scala 29:58]
    node _T_138 = bits(_T_133, 2, 2) @[Bitwise.scala 109:44]
    node _T_139 = cat(_T_137, _T_138) @[Cat.scala 29:58]
    node _T_140 = and(_T_129, _T_139) @[MulAddRecFN.scala 249:78]
    node notCDom_reduced4SigExtra = orr(_T_140) @[MulAddRecFN.scala 251:11]
    node _T_141 = shr(notCDom_mainSig, 3) @[MulAddRecFN.scala 253:28]
    node _T_142 = bits(notCDom_mainSig, 2, 0) @[MulAddRecFN.scala 254:28]
    node _T_143 = orr(_T_142) @[MulAddRecFN.scala 254:35]
    node _T_144 = or(_T_143, notCDom_reduced4SigExtra) @[MulAddRecFN.scala 254:39]
    node notCDom_sig = cat(_T_141, _T_144) @[Cat.scala 29:58]
    node _T_145 = bits(notCDom_sig, 13, 12) @[MulAddRecFN.scala 257:21]
    node notCDom_completeCancellation = eq(_T_145, UInt<1>("h0")) @[MulAddRecFN.scala 257:50]
    node _T_146 = xor(io.fromPreMul.signProd, notCDom_signSigSum) @[MulAddRecFN.scala 261:36]
    node notCDom_sign = mux(notCDom_completeCancellation, roundingMode_min, _T_146) @[MulAddRecFN.scala 259:12]
    node notNaN_isInfProd = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 266:49]
    node notNaN_isInfOut = or(notNaN_isInfProd, io.fromPreMul.isInfC) @[MulAddRecFN.scala 267:44]
    node _T_147 = or(io.fromPreMul.isZeroA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 269:32]
    node notNaN_addZeros = and(_T_147, io.fromPreMul.isZeroC) @[MulAddRecFN.scala 269:58]
    node _T_148 = and(io.fromPreMul.isInfA, io.fromPreMul.isZeroB) @[MulAddRecFN.scala 274:31]
    node _T_149 = or(io.fromPreMul.isSigNaNAny, _T_148) @[MulAddRecFN.scala 273:35]
    node _T_150 = and(io.fromPreMul.isZeroA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 275:32]
    node _T_151 = or(_T_149, _T_150) @[MulAddRecFN.scala 274:57]
    node _T_152 = eq(io.fromPreMul.isNaNAOrB, UInt<1>("h0")) @[MulAddRecFN.scala 276:10]
    node _T_153 = or(io.fromPreMul.isInfA, io.fromPreMul.isInfB) @[MulAddRecFN.scala 277:36]
    node _T_154 = and(_T_152, _T_153) @[MulAddRecFN.scala 276:36]
    node _T_155 = and(_T_154, io.fromPreMul.isInfC) @[MulAddRecFN.scala 277:61]
    node _T_156 = and(_T_155, io.fromPreMul.doSubMags) @[MulAddRecFN.scala 278:35]
    node _T_157 = or(_T_151, _T_156) @[MulAddRecFN.scala 275:57]
    io.invalidExc <= _T_157 @[MulAddRecFN.scala 272:19]
    node _T_158 = or(io.fromPreMul.isNaNAOrB, io.fromPreMul.isNaNC) @[MulAddRecFN.scala 280:48]
    io.rawOut.isNaN <= _T_158 @[MulAddRecFN.scala 280:21]
    io.rawOut.isInf <= notNaN_isInfOut @[MulAddRecFN.scala 281:21]
    node _T_159 = eq(io.fromPreMul.CIsDominant, UInt<1>("h0")) @[MulAddRecFN.scala 285:14]
    node _T_160 = and(_T_159, notCDom_completeCancellation) @[MulAddRecFN.scala 285:42]
    node _T_161 = or(notNaN_addZeros, _T_160) @[MulAddRecFN.scala 284:25]
    io.rawOut.isZero <= _T_161 @[MulAddRecFN.scala 283:22]
    node _T_162 = and(notNaN_isInfProd, io.fromPreMul.signProd) @[MulAddRecFN.scala 287:27]
    node _T_163 = and(io.fromPreMul.isInfC, CDom_sign) @[MulAddRecFN.scala 288:31]
    node _T_164 = or(_T_162, _T_163) @[MulAddRecFN.scala 287:54]
    node _T_165 = eq(roundingMode_min, UInt<1>("h0")) @[MulAddRecFN.scala 289:29]
    node _T_166 = and(notNaN_addZeros, _T_165) @[MulAddRecFN.scala 289:26]
    node _T_167 = and(_T_166, io.fromPreMul.signProd) @[MulAddRecFN.scala 289:48]
    node _T_168 = and(_T_167, CDom_sign) @[MulAddRecFN.scala 290:36]
    node _T_169 = or(_T_164, _T_168) @[MulAddRecFN.scala 288:43]
    node _T_170 = and(notNaN_addZeros, roundingMode_min) @[MulAddRecFN.scala 291:26]
    node _T_171 = or(io.fromPreMul.signProd, CDom_sign) @[MulAddRecFN.scala 292:37]
    node _T_172 = and(_T_170, _T_171) @[MulAddRecFN.scala 291:46]
    node _T_173 = or(_T_169, _T_172) @[MulAddRecFN.scala 290:48]
    node _T_174 = eq(notNaN_isInfOut, UInt<1>("h0")) @[MulAddRecFN.scala 293:10]
    node _T_175 = eq(notNaN_addZeros, UInt<1>("h0")) @[MulAddRecFN.scala 293:31]
    node _T_176 = and(_T_174, _T_175) @[MulAddRecFN.scala 293:28]
    node _T_177 = mux(io.fromPreMul.CIsDominant, CDom_sign, notCDom_sign) @[MulAddRecFN.scala 294:17]
    node _T_178 = and(_T_176, _T_177) @[MulAddRecFN.scala 293:49]
    node _T_179 = or(_T_173, _T_178) @[MulAddRecFN.scala 292:50]
    io.rawOut.sign <= _T_179 @[MulAddRecFN.scala 286:20]
    node _T_180 = mux(io.fromPreMul.CIsDominant, CDom_sExp, notCDom_sExp) @[MulAddRecFN.scala 295:26]
    io.rawOut.sExp <= _T_180 @[MulAddRecFN.scala 295:20]
    node _T_181 = mux(io.fromPreMul.CIsDominant, CDom_sig, notCDom_sig) @[MulAddRecFN.scala 296:25]
    io.rawOut.sig <= _T_181 @[MulAddRecFN.scala 296:19]

  module RoundAnyRawFNToRecFN :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}
  
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _T_2 = and(roundingMode_max, _T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_T, _T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _T_3 = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _T_4 = not(_T_3) @[primitives.scala 51:21]
    node _T_5 = dshr(asSInt(UInt<65>("h10000000000000000")), _T_4) @[primitives.scala 77:58]
    node _T_6 = bits(_T_5, 18, 7) @[primitives.scala 79:22]
    node _T_7 = bits(_T_6, 7, 0) @[Bitwise.scala 109:18]
    node _T_8 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 102:47]
    node _T_9 = xor(UInt<8>("hff"), _T_8) @[Bitwise.scala 102:21]
    node _T_10 = shr(_T_7, 4) @[Bitwise.scala 103:21]
    node _T_11 = and(_T_10, _T_9) @[Bitwise.scala 103:31]
    node _T_12 = bits(_T_7, 3, 0) @[Bitwise.scala 103:46]
    node _T_13 = shl(_T_12, 4) @[Bitwise.scala 103:65]
    node _T_14 = not(_T_9) @[Bitwise.scala 103:77]
    node _T_15 = and(_T_13, _T_14) @[Bitwise.scala 103:75]
    node _T_16 = or(_T_11, _T_15) @[Bitwise.scala 103:39]
    node _T_17 = bits(_T_9, 5, 0) @[Bitwise.scala 102:28]
    node _T_18 = shl(_T_17, 2) @[Bitwise.scala 102:47]
    node _T_19 = xor(_T_9, _T_18) @[Bitwise.scala 102:21]
    node _T_20 = shr(_T_16, 2) @[Bitwise.scala 103:21]
    node _T_21 = and(_T_20, _T_19) @[Bitwise.scala 103:31]
    node _T_22 = bits(_T_16, 5, 0) @[Bitwise.scala 103:46]
    node _T_23 = shl(_T_22, 2) @[Bitwise.scala 103:65]
    node _T_24 = not(_T_19) @[Bitwise.scala 103:77]
    node _T_25 = and(_T_23, _T_24) @[Bitwise.scala 103:75]
    node _T_26 = or(_T_21, _T_25) @[Bitwise.scala 103:39]
    node _T_27 = bits(_T_19, 6, 0) @[Bitwise.scala 102:28]
    node _T_28 = shl(_T_27, 1) @[Bitwise.scala 102:47]
    node _T_29 = xor(_T_19, _T_28) @[Bitwise.scala 102:21]
    node _T_30 = shr(_T_26, 1) @[Bitwise.scala 103:21]
    node _T_31 = and(_T_30, _T_29) @[Bitwise.scala 103:31]
    node _T_32 = bits(_T_26, 6, 0) @[Bitwise.scala 103:46]
    node _T_33 = shl(_T_32, 1) @[Bitwise.scala 103:65]
    node _T_34 = not(_T_29) @[Bitwise.scala 103:77]
    node _T_35 = and(_T_33, _T_34) @[Bitwise.scala 103:75]
    node _T_36 = or(_T_31, _T_35) @[Bitwise.scala 103:39]
    node _T_37 = bits(_T_6, 11, 8) @[Bitwise.scala 109:44]
    node _T_38 = bits(_T_37, 1, 0) @[Bitwise.scala 109:18]
    node _T_39 = bits(_T_38, 0, 0) @[Bitwise.scala 109:18]
    node _T_40 = bits(_T_38, 1, 1) @[Bitwise.scala 109:44]
    node _T_41 = cat(_T_39, _T_40) @[Cat.scala 29:58]
    node _T_42 = bits(_T_37, 3, 2) @[Bitwise.scala 109:44]
    node _T_43 = bits(_T_42, 0, 0) @[Bitwise.scala 109:18]
    node _T_44 = bits(_T_42, 1, 1) @[Bitwise.scala 109:44]
    node _T_45 = cat(_T_43, _T_44) @[Cat.scala 29:58]
    node _T_46 = cat(_T_41, _T_45) @[Cat.scala 29:58]
    node _T_47 = cat(_T_36, _T_46) @[Cat.scala 29:58]
    node _T_48 = or(_T_47, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node _T_49 = cat(_T_48, UInt<2>("h3")) @[Cat.scala 29:58]
    node _T_50 = shr(_T_49, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node _T_51 = cat(UInt<1>("h0"), _T_50) @[Cat.scala 29:58]
    node _T_52 = not(_T_51) @[RoundAnyRawFNToRecFN.scala 161:28]
    node _T_53 = and(_T_52, _T_49) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _T_54 = and(adjustedSig, _T_53) @[RoundAnyRawFNToRecFN.scala 162:40]
    node _T_55 = orr(_T_54) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _T_56 = and(adjustedSig, _T_51) @[RoundAnyRawFNToRecFN.scala 163:42]
    node _T_57 = orr(_T_56) @[RoundAnyRawFNToRecFN.scala 163:62]
    node _T_58 = or(_T_55, _T_57) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _T_59 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _T_60 = and(_T_59, _T_55) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _T_61 = and(roundMagUp, _T_58) @[RoundAnyRawFNToRecFN.scala 169:29]
    node _T_62 = or(_T_60, _T_61) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _T_63 = or(adjustedSig, _T_49) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _T_64 = shr(_T_63, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _T_65 = add(_T_64, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _T_66 = and(roundingMode_near_even, _T_55) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _T_67 = eq(_T_57, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _T_68 = and(_T_66, _T_67) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _T_69 = shr(_T_49, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _T_70 = mux(_T_68, _T_69, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _T_71 = not(_T_70) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _T_72 = and(_T_65, _T_71) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _T_73 = not(_T_49) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _T_74 = and(adjustedSig, _T_73) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _T_75 = shr(_T_74, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _T_76 = and(roundingMode_odd, _T_58) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _T_77 = shr(_T_53, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _T_78 = mux(_T_76, _T_77, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _T_79 = or(_T_75, _T_78) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _T_80 = mux(_T_62, _T_72, _T_79) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _T_81 = shr(_T_80, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _T_82 = cvt(_T_81) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _T_83 = add(io.in.sExp, _T_82) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _T_84 = bits(_T_83, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _T_84 @[RoundAnyRawFNToRecFN.scala 185:23]
    node _T_85 = bits(_T_80, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _T_86 = bits(_T_80, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _T_87 = mux(doShiftSigDown1, _T_85, _T_86) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _T_87 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _T_88 = shr(_T_83, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _T_89 = geq(_T_88, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _T_89 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _T_90 = lt(_T_83, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _T_90 @[RoundAnyRawFNToRecFN.scala 195:31]
    node _T_91 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _T_92 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node _T_93 = mux(doShiftSigDown1, _T_91, _T_92) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _T_94 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _T_95 = and(doShiftSigDown1, _T_94) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _T_96 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _T_97 = orr(_T_96) @[RoundAnyRawFNToRecFN.scala 203:70]
    node _T_98 = or(_T_95, _T_97) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _T_99 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _T_100 = and(_T_99, _T_93) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _T_101 = and(roundMagUp, _T_98) @[RoundAnyRawFNToRecFN.scala 207:29]
    node _T_102 = or(_T_100, _T_101) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _T_103 = bits(_T_80, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _T_104 = bits(_T_80, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node _T_105 = mux(doShiftSigDown1, _T_103, _T_104) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _T_106 = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _T_107 = leq(_T_106, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _T_108 = and(_T_58, _T_107) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _T_109 = bits(_T_49, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _T_110 = bits(_T_49, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _T_111 = mux(doShiftSigDown1, _T_109, _T_110) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _T_112 = and(_T_108, _T_111) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _T_113 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _T_114 = bits(_T_49, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _T_115 = bits(_T_49, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _T_116 = mux(doShiftSigDown1, _T_114, _T_115) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _T_117 = eq(_T_116, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _T_118 = and(_T_113, _T_117) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _T_119 = and(_T_118, _T_105) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _T_120 = and(_T_119, _T_55) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _T_121 = and(_T_120, _T_102) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _T_122 = eq(_T_121, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _T_123 = and(_T_112, _T_122) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _T_124 = or(common_totalUnderflow, _T_123) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _T_124 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _T_125 = or(common_totalUnderflow, _T_58) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _T_125 @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _T_126 = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _T_127 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _T_128 = and(_T_126, _T_127) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _T_129 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_T_128, _T_129) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _T_130 = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _T_130) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _T_131 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_T_131, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _T_132 = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _T_133 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_T_132, _T_133) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _T_134 = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _T_134) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _T_135 = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _T_135) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _T_136 = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _T_137 = mux(_T_136, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _T_138 = not(_T_137) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _T_139 = and(common_expOut, _T_138) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _T_140 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _T_141 = mux(pegMinNonzeroMagOut, _T_140, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _T_142 = not(_T_141) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _T_143 = and(_T_139, _T_142) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _T_144 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _T_145 = not(_T_144) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _T_146 = and(_T_143, _T_145) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _T_147 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _T_148 = not(_T_147) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _T_149 = and(_T_146, _T_148) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _T_150 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _T_151 = or(_T_149, _T_150) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _T_152 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _T_153 = or(_T_151, _T_152) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _T_154 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _T_155 = or(_T_153, _T_154) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _T_156 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_T_155, _T_156) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _T_157 = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _T_158 = or(_T_157, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _T_159 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _T_160 = mux(_T_158, _T_159, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _T_161 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _T_162 = mux(_T_161, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_T_160, _T_162) @[RoundAnyRawFNToRecFN.scala 281:11]
    node _T_163 = cat(signOut, expOut) @[Cat.scala 29:58]
    node _T_164 = cat(_T_163, fractOut) @[Cat.scala 29:58]
    io.out <= _T_164 @[RoundAnyRawFNToRecFN.scala 284:12]
    node _T_165 = cat(underflow, inexact) @[Cat.scala 29:58]
    node _T_166 = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 29:58]
    node _T_167 = cat(_T_166, overflow) @[Cat.scala 29:58]
    node _T_168 = cat(_T_167, _T_165) @[Cat.scala 29:58]
    io.exceptionFlags <= _T_168 @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}
  
    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulAddRecFN :
    output io : { flip op : UInt<2>, flip a : UInt<17>, flip b : UInt<17>, flip c : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}
  
    io is invalid
    inst mulAddRecFNToRaw_preMul of MulAddRecFNToRaw_preMul @[MulAddRecFN.scala 318:15]
    mulAddRecFNToRaw_preMul.io is invalid
    inst mulAddRecFNToRaw_postMul of MulAddRecFNToRaw_postMul @[MulAddRecFN.scala 320:15]
    mulAddRecFNToRaw_postMul.io is invalid
    mulAddRecFNToRaw_preMul.io.op <= io.op @[MulAddRecFN.scala 322:35]
    mulAddRecFNToRaw_preMul.io.a <= io.a @[MulAddRecFN.scala 323:35]
    mulAddRecFNToRaw_preMul.io.b <= io.b @[MulAddRecFN.scala 324:35]
    mulAddRecFNToRaw_preMul.io.c <= io.c @[MulAddRecFN.scala 325:35]
    node _T = mul(mulAddRecFNToRaw_preMul.io.mulAddA, mulAddRecFNToRaw_preMul.io.mulAddB) @[MulAddRecFN.scala 328:45]
    node mulAddResult = add(_T, mulAddRecFNToRaw_preMul.io.mulAddC) @[MulAddRecFN.scala 329:50]
    mulAddRecFNToRaw_postMul.io.fromPreMul <- mulAddRecFNToRaw_preMul.io.toPostMul @[MulAddRecFN.scala 332:44]
    mulAddRecFNToRaw_postMul.io.mulAddResult <= mulAddResult @[MulAddRecFN.scala 334:46]
    mulAddRecFNToRaw_postMul.io.roundingMode <= io.roundingMode @[MulAddRecFN.scala 335:46]
    inst roundRawFNToRecFN of RoundRawFNToRecFN @[MulAddRecFN.scala 340:15]
    roundRawFNToRecFN.io is invalid
    roundRawFNToRecFN.io.invalidExc <= mulAddRecFNToRaw_postMul.io.invalidExc @[MulAddRecFN.scala 341:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulAddRecFN.scala 342:39]
    roundRawFNToRecFN.io.in <- mulAddRecFNToRaw_postMul.io.rawOut @[MulAddRecFN.scala 343:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulAddRecFN.scala 344:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulAddRecFN.scala 345:41]
    io.out <= roundRawFNToRecFN.io.out @[MulAddRecFN.scala 346:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulAddRecFN.scala 347:23]

  module ValExec_MulAddRecFN_mul :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip a : UInt<16>, flip b : UInt<16>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, expected : { flip out : UInt<16>, flip exceptionFlags : UInt<5>, recOut : UInt<17>}, actual : { out : UInt<17>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
  
    clock is invalid
    reset is invalid
    io is invalid
    inst mulAddRecFN of MulAddRecFN @[ValExec_MulAddRecFN.scala 151:29]
    mulAddRecFN.io is invalid
    mulAddRecFN.io.op <= UInt<1>("h0") @[ValExec_MulAddRecFN.scala 152:23]
    node _T = bits(io.a, 15, 15) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 14, 10) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 9, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = mux(_T_6, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:69]
    node _T_16 = mux(_T_7, UInt<3>("h7"), _T_15) @[Mux.scala 47:69]
    node _T_17 = mux(_T_8, UInt<3>("h6"), _T_16) @[Mux.scala 47:69]
    node _T_18 = mux(_T_9, UInt<3>("h5"), _T_17) @[Mux.scala 47:69]
    node _T_19 = mux(_T_10, UInt<3>("h4"), _T_18) @[Mux.scala 47:69]
    node _T_20 = mux(_T_11, UInt<2>("h3"), _T_19) @[Mux.scala 47:69]
    node _T_21 = mux(_T_12, UInt<2>("h2"), _T_20) @[Mux.scala 47:69]
    node _T_22 = mux(_T_13, UInt<1>("h1"), _T_21) @[Mux.scala 47:69]
    node _T_23 = mux(_T_14, UInt<1>("h0"), _T_22) @[Mux.scala 47:69]
    node _T_24 = dshl(_T_2, _T_23) @[rawFloatFromFN.scala 54:36]
    node _T_25 = bits(_T_24, 8, 0) @[rawFloatFromFN.scala 54:47]
    node _T_26 = shl(_T_25, 1) @[rawFloatFromFN.scala 54:64]
    node _T_27 = xor(_T_23, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _T_28 = mux(_T_3, _T_27, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_29 = mux(_T_3, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _T_30 = or(UInt<5>("h10"), _T_29) @[rawFloatFromFN.scala 60:22]
    node _T_31 = add(_T_28, _T_30) @[rawFloatFromFN.scala 59:15]
    node _T_32 = tail(_T_31, 1) @[rawFloatFromFN.scala 59:15]
    node _T_33 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_34 = bits(_T_32, 5, 4) @[rawFloatFromFN.scala 63:37]
    node _T_35 = eq(_T_34, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire _T_36 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    _T_36 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_37 = eq(_T_4, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _T_38 = and(_T_35, _T_37) @[rawFloatFromFN.scala 66:33]
    _T_36.isNaN <= _T_38 @[rawFloatFromFN.scala 66:20]
    node _T_39 = and(_T_35, _T_4) @[rawFloatFromFN.scala 67:33]
    _T_36.isInf <= _T_39 @[rawFloatFromFN.scala 67:20]
    _T_36.isZero <= _T_33 @[rawFloatFromFN.scala 68:20]
    _T_36.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_40 = bits(_T_32, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _T_41 = cvt(_T_40) @[rawFloatFromFN.scala 70:48]
    _T_36.sExp <= _T_41 @[rawFloatFromFN.scala 70:20]
    node _T_42 = eq(_T_33, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _T_43 = mux(_T_3, _T_26, _T_2) @[rawFloatFromFN.scala 72:42]
    node _T_44 = cat(UInt<1>("h0"), _T_42) @[Cat.scala 29:58]
    node _T_45 = cat(_T_44, _T_43) @[Cat.scala 29:58]
    _T_36.sig <= _T_45 @[rawFloatFromFN.scala 71:17]
    node _T_46 = bits(_T_36.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _T_47 = mux(_T_36.isZero, UInt<3>("h0"), _T_46) @[recFNFromFN.scala 48:16]
    node _T_48 = mux(_T_36.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _T_49 = or(_T_47, _T_48) @[recFNFromFN.scala 48:79]
    node _T_50 = bits(_T_36.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _T_51 = bits(_T_36.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node _T_52 = cat(_T_50, _T_51) @[Cat.scala 29:58]
    node _T_53 = cat(_T_36.sign, _T_49) @[Cat.scala 29:58]
    node _T_54 = cat(_T_53, _T_52) @[Cat.scala 29:58]
    mulAddRecFN.io.a <= _T_54 @[ValExec_MulAddRecFN.scala 153:22]
    node _T_55 = bits(io.b, 15, 15) @[rawFloatFromFN.scala 46:22]
    node _T_56 = bits(io.b, 14, 10) @[rawFloatFromFN.scala 47:23]
    node _T_57 = bits(io.b, 9, 0) @[rawFloatFromFN.scala 48:25]
    node _T_58 = eq(_T_56, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node _T_59 = eq(_T_57, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _T_60 = bits(_T_57, 0, 0) @[primitives.scala 92:52]
    node _T_61 = bits(_T_57, 1, 1) @[primitives.scala 92:52]
    node _T_62 = bits(_T_57, 2, 2) @[primitives.scala 92:52]
    node _T_63 = bits(_T_57, 3, 3) @[primitives.scala 92:52]
    node _T_64 = bits(_T_57, 4, 4) @[primitives.scala 92:52]
    node _T_65 = bits(_T_57, 5, 5) @[primitives.scala 92:52]
    node _T_66 = bits(_T_57, 6, 6) @[primitives.scala 92:52]
    node _T_67 = bits(_T_57, 7, 7) @[primitives.scala 92:52]
    node _T_68 = bits(_T_57, 8, 8) @[primitives.scala 92:52]
    node _T_69 = bits(_T_57, 9, 9) @[primitives.scala 92:52]
    node _T_70 = mux(_T_61, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:69]
    node _T_71 = mux(_T_62, UInt<3>("h7"), _T_70) @[Mux.scala 47:69]
    node _T_72 = mux(_T_63, UInt<3>("h6"), _T_71) @[Mux.scala 47:69]
    node _T_73 = mux(_T_64, UInt<3>("h5"), _T_72) @[Mux.scala 47:69]
    node _T_74 = mux(_T_65, UInt<3>("h4"), _T_73) @[Mux.scala 47:69]
    node _T_75 = mux(_T_66, UInt<2>("h3"), _T_74) @[Mux.scala 47:69]
    node _T_76 = mux(_T_67, UInt<2>("h2"), _T_75) @[Mux.scala 47:69]
    node _T_77 = mux(_T_68, UInt<1>("h1"), _T_76) @[Mux.scala 47:69]
    node _T_78 = mux(_T_69, UInt<1>("h0"), _T_77) @[Mux.scala 47:69]
    node _T_79 = dshl(_T_57, _T_78) @[rawFloatFromFN.scala 54:36]
    node _T_80 = bits(_T_79, 8, 0) @[rawFloatFromFN.scala 54:47]
    node _T_81 = shl(_T_80, 1) @[rawFloatFromFN.scala 54:64]
    node _T_82 = xor(_T_78, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _T_83 = mux(_T_58, _T_82, _T_56) @[rawFloatFromFN.scala 56:16]
    node _T_84 = mux(_T_58, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _T_85 = or(UInt<5>("h10"), _T_84) @[rawFloatFromFN.scala 60:22]
    node _T_86 = add(_T_83, _T_85) @[rawFloatFromFN.scala 59:15]
    node _T_87 = tail(_T_86, 1) @[rawFloatFromFN.scala 59:15]
    node _T_88 = and(_T_58, _T_59) @[rawFloatFromFN.scala 62:34]
    node _T_89 = bits(_T_87, 5, 4) @[rawFloatFromFN.scala 63:37]
    node _T_90 = eq(_T_89, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire _T_91 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    _T_91 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_92 = eq(_T_59, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _T_93 = and(_T_90, _T_92) @[rawFloatFromFN.scala 66:33]
    _T_91.isNaN <= _T_93 @[rawFloatFromFN.scala 66:20]
    node _T_94 = and(_T_90, _T_59) @[rawFloatFromFN.scala 67:33]
    _T_91.isInf <= _T_94 @[rawFloatFromFN.scala 67:20]
    _T_91.isZero <= _T_88 @[rawFloatFromFN.scala 68:20]
    _T_91.sign <= _T_55 @[rawFloatFromFN.scala 69:20]
    node _T_95 = bits(_T_87, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _T_96 = cvt(_T_95) @[rawFloatFromFN.scala 70:48]
    _T_91.sExp <= _T_96 @[rawFloatFromFN.scala 70:20]
    node _T_97 = eq(_T_88, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _T_98 = mux(_T_58, _T_81, _T_57) @[rawFloatFromFN.scala 72:42]
    node _T_99 = cat(UInt<1>("h0"), _T_97) @[Cat.scala 29:58]
    node _T_100 = cat(_T_99, _T_98) @[Cat.scala 29:58]
    _T_91.sig <= _T_100 @[rawFloatFromFN.scala 71:17]
    node _T_101 = bits(_T_91.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _T_102 = mux(_T_91.isZero, UInt<3>("h0"), _T_101) @[recFNFromFN.scala 48:16]
    node _T_103 = mux(_T_91.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _T_104 = or(_T_102, _T_103) @[recFNFromFN.scala 48:79]
    node _T_105 = bits(_T_91.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _T_106 = bits(_T_91.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node _T_107 = cat(_T_105, _T_106) @[Cat.scala 29:58]
    node _T_108 = cat(_T_91.sign, _T_104) @[Cat.scala 29:58]
    node _T_109 = cat(_T_108, _T_107) @[Cat.scala 29:58]
    mulAddRecFN.io.b <= _T_109 @[ValExec_MulAddRecFN.scala 154:22]
    node _T_110 = xor(io.a, io.b) @[ValExec_MulAddRecFN.scala 156:16]
    node _T_111 = and(_T_110, UInt<16>("h8000")) @[ValExec_MulAddRecFN.scala 156:24]
    node _T_112 = shl(_T_111, 1) @[ValExec_MulAddRecFN.scala 156:69]
    mulAddRecFN.io.c <= _T_112 @[ValExec_MulAddRecFN.scala 155:22]
    mulAddRecFN.io.roundingMode <= io.roundingMode @[ValExec_MulAddRecFN.scala 157:35]
    mulAddRecFN.io.detectTininess <= io.detectTininess @[ValExec_MulAddRecFN.scala 158:35]
    node _T_113 = bits(io.expected.out, 15, 15) @[rawFloatFromFN.scala 46:22]
    node _T_114 = bits(io.expected.out, 14, 10) @[rawFloatFromFN.scala 47:23]
    node _T_115 = bits(io.expected.out, 9, 0) @[rawFloatFromFN.scala 48:25]
    node _T_116 = eq(_T_114, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node _T_117 = eq(_T_115, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _T_118 = bits(_T_115, 0, 0) @[primitives.scala 92:52]
    node _T_119 = bits(_T_115, 1, 1) @[primitives.scala 92:52]
    node _T_120 = bits(_T_115, 2, 2) @[primitives.scala 92:52]
    node _T_121 = bits(_T_115, 3, 3) @[primitives.scala 92:52]
    node _T_122 = bits(_T_115, 4, 4) @[primitives.scala 92:52]
    node _T_123 = bits(_T_115, 5, 5) @[primitives.scala 92:52]
    node _T_124 = bits(_T_115, 6, 6) @[primitives.scala 92:52]
    node _T_125 = bits(_T_115, 7, 7) @[primitives.scala 92:52]
    node _T_126 = bits(_T_115, 8, 8) @[primitives.scala 92:52]
    node _T_127 = bits(_T_115, 9, 9) @[primitives.scala 92:52]
    node _T_128 = mux(_T_119, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:69]
    node _T_129 = mux(_T_120, UInt<3>("h7"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_121, UInt<3>("h6"), _T_129) @[Mux.scala 47:69]
    node _T_131 = mux(_T_122, UInt<3>("h5"), _T_130) @[Mux.scala 47:69]
    node _T_132 = mux(_T_123, UInt<3>("h4"), _T_131) @[Mux.scala 47:69]
    node _T_133 = mux(_T_124, UInt<2>("h3"), _T_132) @[Mux.scala 47:69]
    node _T_134 = mux(_T_125, UInt<2>("h2"), _T_133) @[Mux.scala 47:69]
    node _T_135 = mux(_T_126, UInt<1>("h1"), _T_134) @[Mux.scala 47:69]
    node _T_136 = mux(_T_127, UInt<1>("h0"), _T_135) @[Mux.scala 47:69]
    node _T_137 = dshl(_T_115, _T_136) @[rawFloatFromFN.scala 54:36]
    node _T_138 = bits(_T_137, 8, 0) @[rawFloatFromFN.scala 54:47]
    node _T_139 = shl(_T_138, 1) @[rawFloatFromFN.scala 54:64]
    node _T_140 = xor(_T_136, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _T_141 = mux(_T_116, _T_140, _T_114) @[rawFloatFromFN.scala 56:16]
    node _T_142 = mux(_T_116, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _T_143 = or(UInt<5>("h10"), _T_142) @[rawFloatFromFN.scala 60:22]
    node _T_144 = add(_T_141, _T_143) @[rawFloatFromFN.scala 59:15]
    node _T_145 = tail(_T_144, 1) @[rawFloatFromFN.scala 59:15]
    node _T_146 = and(_T_116, _T_117) @[rawFloatFromFN.scala 62:34]
    node _T_147 = bits(_T_145, 5, 4) @[rawFloatFromFN.scala 63:37]
    node _T_148 = eq(_T_147, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire _T_149 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    _T_149 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_150 = eq(_T_117, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _T_151 = and(_T_148, _T_150) @[rawFloatFromFN.scala 66:33]
    _T_149.isNaN <= _T_151 @[rawFloatFromFN.scala 66:20]
    node _T_152 = and(_T_148, _T_117) @[rawFloatFromFN.scala 67:33]
    _T_149.isInf <= _T_152 @[rawFloatFromFN.scala 67:20]
    _T_149.isZero <= _T_146 @[rawFloatFromFN.scala 68:20]
    _T_149.sign <= _T_113 @[rawFloatFromFN.scala 69:20]
    node _T_153 = bits(_T_145, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _T_154 = cvt(_T_153) @[rawFloatFromFN.scala 70:48]
    _T_149.sExp <= _T_154 @[rawFloatFromFN.scala 70:20]
    node _T_155 = eq(_T_146, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _T_156 = mux(_T_116, _T_139, _T_115) @[rawFloatFromFN.scala 72:42]
    node _T_157 = cat(UInt<1>("h0"), _T_155) @[Cat.scala 29:58]
    node _T_158 = cat(_T_157, _T_156) @[Cat.scala 29:58]
    _T_149.sig <= _T_158 @[rawFloatFromFN.scala 71:17]
    node _T_159 = bits(_T_149.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _T_160 = mux(_T_149.isZero, UInt<3>("h0"), _T_159) @[recFNFromFN.scala 48:16]
    node _T_161 = mux(_T_149.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _T_162 = or(_T_160, _T_161) @[recFNFromFN.scala 48:79]
    node _T_163 = bits(_T_149.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _T_164 = bits(_T_149.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node _T_165 = cat(_T_163, _T_164) @[Cat.scala 29:58]
    node _T_166 = cat(_T_149.sign, _T_162) @[Cat.scala 29:58]
    node _T_167 = cat(_T_166, _T_165) @[Cat.scala 29:58]
    io.expected.recOut <= _T_167 @[ValExec_MulAddRecFN.scala 160:24]
    io.actual.out <= mulAddRecFN.io.out @[ValExec_MulAddRecFN.scala 162:19]
    io.actual.exceptionFlags <= mulAddRecFN.io.exceptionFlags @[ValExec_MulAddRecFN.scala 163:30]
    io.check <= UInt<1>("h1") @[ValExec_MulAddRecFN.scala 165:14]
    node _T_168 = bits(io.actual.out, 16, 13) @[package.scala 46:22]
    node _T_169 = bits(io.expected.recOut, 16, 13) @[package.scala 47:22]
    node _T_170 = bits(_T_168, 2, 0) @[package.scala 48:19]
    node _T_171 = eq(_T_170, UInt<1>("h0")) @[package.scala 48:26]
    node _T_172 = bits(_T_168, 2, 0) @[package.scala 48:44]
    node _T_173 = eq(_T_172, UInt<3>("h7")) @[package.scala 48:51]
    node _T_174 = or(_T_171, _T_173) @[package.scala 48:35]
    node _T_175 = eq(_T_168, _T_169) @[package.scala 49:20]
    node _T_176 = bits(io.actual.out, 9, 0) @[package.scala 49:36]
    node _T_177 = bits(io.expected.recOut, 9, 0) @[package.scala 49:59]
    node _T_178 = eq(_T_176, _T_177) @[package.scala 49:54]
    node _T_179 = and(_T_175, _T_178) @[package.scala 49:31]
    node _T_180 = bits(_T_168, 2, 0) @[package.scala 50:23]
    node _T_181 = eq(_T_180, UInt<3>("h6")) @[package.scala 50:30]
    node _T_182 = eq(_T_168, _T_169) @[package.scala 50:47]
    node _T_183 = eq(io.actual.out, io.expected.recOut) @[package.scala 50:62]
    node _T_184 = mux(_T_181, _T_182, _T_183) @[package.scala 50:16]
    node _T_185 = mux(_T_174, _T_179, _T_184) @[package.scala 48:12]
    node _T_186 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_MulAddRecFN.scala 168:35]
    node _T_187 = and(_T_185, _T_186) @[ValExec_MulAddRecFN.scala 167:75]
    io.pass <= _T_187 @[ValExec_MulAddRecFN.scala 166:13]
