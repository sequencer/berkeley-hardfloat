circuit ValExec_AddRecFN :
  module AddRawFN :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}}
  
    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _T_1 = tail(_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_T_1) @[AddRecFN.scala 63:31]
    node _T_2 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _T_3 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _T_4 = tail(_T_3, 1) @[AddRecFN.scala 64:58]
    node _T_5 = asSInt(_T_4) @[AddRecFN.scala 64:58]
    node _T_6 = mux(_T_2, _T_5, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_T_6, 4, 0) @[AddRecFN.scala 64:81]
    node _T_7 = shr(sDiffExps, 5) @[AddRecFN.scala 66:19]
    node _T_8 = neq(_T_7, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _T_9 = shr(sDiffExps, 5) @[AddRecFN.scala 67:24]
    node _T_10 = neq(_T_9, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _T_11 = bits(sDiffExps, 4, 0) @[AddRecFN.scala 67:63]
    node _T_12 = eq(_T_11, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _T_13 = or(_T_10, _T_12) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_T_8, _T_13) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<5>("h1f"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _T_14 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _T_15 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _T_16 = and(_T_14, _T_15) @[AddRecFN.scala 69:33]
    node _T_17 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_T_16, _T_17) @[AddRecFN.scala 69:48]
    node _T_18 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _T_19 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _T_20 = and(_T_18, _T_19) @[AddRecFN.scala 73:32]
    node _T_21 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _T_22 = mux(_T_20, _T_21, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _T_23 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _T_24 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _T_25 = eq(_T_24, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _T_26 = and(_T_23, _T_25) @[AddRecFN.scala 74:32]
    node _T_27 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _T_28 = mux(_T_26, _T_27, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _T_29 = or(_T_22, _T_28) @[AddRecFN.scala 73:68]
    node _T_30 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _T_31 = mux(_T_30, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_T_29, _T_31) @[AddRecFN.scala 74:68]
    node _T_32 = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _T_33 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _T_34 = asSInt(_T_33) @[AddRecFN.scala 76:66]
    node _T_35 = sub(_T_32, _T_34) @[AddRecFN.scala 76:50]
    node _T_36 = tail(_T_35, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_T_36) @[AddRecFN.scala 76:50]
    node _T_37 = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _T_38 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _T_39 = tail(_T_38, 1) @[AddRecFN.scala 77:49]
    node _T_40 = asSInt(_T_39) @[AddRecFN.scala 77:49]
    node _T_41 = mux(_T_37, _T_40, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_T_41, 25, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 0) @[AddRecFN.scala 78:44]
    wire _T_42 : UInt<1>[13] @[primitives.scala 102:30]
    _T_42 is invalid @[primitives.scala 102:30]
    node _T_43 = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _T_44 = orr(_T_43) @[primitives.scala 104:54]
    _T_42[0] <= _T_44 @[primitives.scala 104:28]
    node _T_45 = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _T_46 = orr(_T_45) @[primitives.scala 104:54]
    _T_42[1] <= _T_46 @[primitives.scala 104:28]
    node _T_47 = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _T_48 = orr(_T_47) @[primitives.scala 104:54]
    _T_42[2] <= _T_48 @[primitives.scala 104:28]
    node _T_49 = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _T_50 = orr(_T_49) @[primitives.scala 104:54]
    _T_42[3] <= _T_50 @[primitives.scala 104:28]
    node _T_51 = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _T_52 = orr(_T_51) @[primitives.scala 104:54]
    _T_42[4] <= _T_52 @[primitives.scala 104:28]
    node _T_53 = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _T_54 = orr(_T_53) @[primitives.scala 104:54]
    _T_42[5] <= _T_54 @[primitives.scala 104:28]
    node _T_55 = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 104:33]
    node _T_56 = orr(_T_55) @[primitives.scala 104:54]
    _T_42[6] <= _T_56 @[primitives.scala 104:28]
    node _T_57 = bits(close_adjustedSigSum, 15, 14) @[primitives.scala 104:33]
    node _T_58 = orr(_T_57) @[primitives.scala 104:54]
    _T_42[7] <= _T_58 @[primitives.scala 104:28]
    node _T_59 = bits(close_adjustedSigSum, 17, 16) @[primitives.scala 104:33]
    node _T_60 = orr(_T_59) @[primitives.scala 104:54]
    _T_42[8] <= _T_60 @[primitives.scala 104:28]
    node _T_61 = bits(close_adjustedSigSum, 19, 18) @[primitives.scala 104:33]
    node _T_62 = orr(_T_61) @[primitives.scala 104:54]
    _T_42[9] <= _T_62 @[primitives.scala 104:28]
    node _T_63 = bits(close_adjustedSigSum, 21, 20) @[primitives.scala 104:33]
    node _T_64 = orr(_T_63) @[primitives.scala 104:54]
    _T_42[10] <= _T_64 @[primitives.scala 104:28]
    node _T_65 = bits(close_adjustedSigSum, 23, 22) @[primitives.scala 104:33]
    node _T_66 = orr(_T_65) @[primitives.scala 104:54]
    _T_42[11] <= _T_66 @[primitives.scala 104:28]
    node _T_67 = bits(close_adjustedSigSum, 25, 24) @[primitives.scala 107:15]
    node _T_68 = orr(_T_67) @[primitives.scala 107:57]
    _T_42[12] <= _T_68 @[primitives.scala 106:38]
    node _T_69 = cat(_T_42[2], _T_42[1]) @[primitives.scala 108:20]
    node _T_70 = cat(_T_69, _T_42[0]) @[primitives.scala 108:20]
    node _T_71 = cat(_T_42[5], _T_42[4]) @[primitives.scala 108:20]
    node _T_72 = cat(_T_71, _T_42[3]) @[primitives.scala 108:20]
    node _T_73 = cat(_T_72, _T_70) @[primitives.scala 108:20]
    node _T_74 = cat(_T_42[8], _T_42[7]) @[primitives.scala 108:20]
    node _T_75 = cat(_T_74, _T_42[6]) @[primitives.scala 108:20]
    node _T_76 = cat(_T_42[10], _T_42[9]) @[primitives.scala 108:20]
    node _T_77 = cat(_T_42[12], _T_42[11]) @[primitives.scala 108:20]
    node _T_78 = cat(_T_77, _T_76) @[primitives.scala 108:20]
    node _T_79 = cat(_T_78, _T_75) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(_T_79, _T_73) @[primitives.scala 108:20]
    node _T_80 = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _T_81 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _T_82 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _T_83 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _T_84 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _T_85 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _T_86 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _T_87 = bits(close_reduced2SigSum, 7, 7) @[primitives.scala 92:52]
    node _T_88 = bits(close_reduced2SigSum, 8, 8) @[primitives.scala 92:52]
    node _T_89 = bits(close_reduced2SigSum, 9, 9) @[primitives.scala 92:52]
    node _T_90 = bits(close_reduced2SigSum, 10, 10) @[primitives.scala 92:52]
    node _T_91 = bits(close_reduced2SigSum, 11, 11) @[primitives.scala 92:52]
    node _T_92 = bits(close_reduced2SigSum, 12, 12) @[primitives.scala 92:52]
    node _T_93 = mux(_T_81, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:69]
    node _T_94 = mux(_T_82, UInt<4>("ha"), _T_93) @[Mux.scala 47:69]
    node _T_95 = mux(_T_83, UInt<4>("h9"), _T_94) @[Mux.scala 47:69]
    node _T_96 = mux(_T_84, UInt<4>("h8"), _T_95) @[Mux.scala 47:69]
    node _T_97 = mux(_T_85, UInt<3>("h7"), _T_96) @[Mux.scala 47:69]
    node _T_98 = mux(_T_86, UInt<3>("h6"), _T_97) @[Mux.scala 47:69]
    node _T_99 = mux(_T_87, UInt<3>("h5"), _T_98) @[Mux.scala 47:69]
    node _T_100 = mux(_T_88, UInt<3>("h4"), _T_99) @[Mux.scala 47:69]
    node _T_101 = mux(_T_89, UInt<2>("h3"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_90, UInt<2>("h2"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_91, UInt<1>("h1"), _T_102) @[Mux.scala 47:69]
    node close_normDistReduced2 = mux(_T_92, UInt<1>("h0"), _T_103) @[Mux.scala 47:69]
    node _T_104 = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_T_104, 4, 0) @[AddRecFN.scala 81:57]
    node _T_105 = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _T_106 = shl(_T_105, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_T_106, 26, 0) @[AddRecFN.scala 82:63]
    node _T_107 = bits(close_sigOut, 26, 25) @[AddRecFN.scala 83:49]
    node _T_108 = orr(_T_107) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_T_108, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _T_109 = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _T_109) @[AddRecFN.scala 84:56]
    node _T_110 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_T_110, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _T_111 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _T_112 = mux(_T_111, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_T_112, 23, 0) @[AddRecFN.scala 88:66]
    node _T_113 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _T_114 = mux(_T_113, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_T_114, 23, 0) @[AddRecFN.scala 89:66]
    node _T_115 = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_T_115, alignDist) @[AddRecFN.scala 90:56]
    node _T_116 = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire _T_117 : UInt<1>[7] @[primitives.scala 119:30]
    _T_117 is invalid @[primitives.scala 119:30]
    node _T_118 = bits(_T_116, 3, 0) @[primitives.scala 121:33]
    node _T_119 = orr(_T_118) @[primitives.scala 121:54]
    _T_117[0] <= _T_119 @[primitives.scala 121:28]
    node _T_120 = bits(_T_116, 7, 4) @[primitives.scala 121:33]
    node _T_121 = orr(_T_120) @[primitives.scala 121:54]
    _T_117[1] <= _T_121 @[primitives.scala 121:28]
    node _T_122 = bits(_T_116, 11, 8) @[primitives.scala 121:33]
    node _T_123 = orr(_T_122) @[primitives.scala 121:54]
    _T_117[2] <= _T_123 @[primitives.scala 121:28]
    node _T_124 = bits(_T_116, 15, 12) @[primitives.scala 121:33]
    node _T_125 = orr(_T_124) @[primitives.scala 121:54]
    _T_117[3] <= _T_125 @[primitives.scala 121:28]
    node _T_126 = bits(_T_116, 19, 16) @[primitives.scala 121:33]
    node _T_127 = orr(_T_126) @[primitives.scala 121:54]
    _T_117[4] <= _T_127 @[primitives.scala 121:28]
    node _T_128 = bits(_T_116, 23, 20) @[primitives.scala 121:33]
    node _T_129 = orr(_T_128) @[primitives.scala 121:54]
    _T_117[5] <= _T_129 @[primitives.scala 121:28]
    node _T_130 = bits(_T_116, 25, 24) @[primitives.scala 124:15]
    node _T_131 = orr(_T_130) @[primitives.scala 124:57]
    _T_117[6] <= _T_131 @[primitives.scala 123:38]
    node _T_132 = cat(_T_117[2], _T_117[1]) @[primitives.scala 125:20]
    node _T_133 = cat(_T_132, _T_117[0]) @[primitives.scala 125:20]
    node _T_134 = cat(_T_117[4], _T_117[3]) @[primitives.scala 125:20]
    node _T_135 = cat(_T_117[6], _T_117[5]) @[primitives.scala 125:20]
    node _T_136 = cat(_T_135, _T_134) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(_T_136, _T_133) @[primitives.scala 125:20]
    node _T_137 = bits(alignDist, 4, 2) @[AddRecFN.scala 92:47]
    node _T_138 = dshr(asSInt(UInt<9>("h100")), _T_137) @[primitives.scala 77:58]
    node _T_139 = bits(_T_138, 7, 1) @[primitives.scala 79:22]
    node _T_140 = bits(_T_139, 3, 0) @[Bitwise.scala 109:18]
    node _T_141 = bits(_T_140, 1, 0) @[Bitwise.scala 109:18]
    node _T_142 = bits(_T_141, 0, 0) @[Bitwise.scala 109:18]
    node _T_143 = bits(_T_141, 1, 1) @[Bitwise.scala 109:44]
    node _T_144 = cat(_T_142, _T_143) @[Cat.scala 29:58]
    node _T_145 = bits(_T_140, 3, 2) @[Bitwise.scala 109:44]
    node _T_146 = bits(_T_145, 0, 0) @[Bitwise.scala 109:18]
    node _T_147 = bits(_T_145, 1, 1) @[Bitwise.scala 109:44]
    node _T_148 = cat(_T_146, _T_147) @[Cat.scala 29:58]
    node _T_149 = cat(_T_144, _T_148) @[Cat.scala 29:58]
    node _T_150 = bits(_T_139, 6, 4) @[Bitwise.scala 109:44]
    node _T_151 = bits(_T_150, 1, 0) @[Bitwise.scala 109:18]
    node _T_152 = bits(_T_151, 0, 0) @[Bitwise.scala 109:18]
    node _T_153 = bits(_T_151, 1, 1) @[Bitwise.scala 109:44]
    node _T_154 = cat(_T_152, _T_153) @[Cat.scala 29:58]
    node _T_155 = bits(_T_150, 2, 2) @[Bitwise.scala 109:44]
    node _T_156 = cat(_T_154, _T_155) @[Cat.scala 29:58]
    node far_roundExtraMask = cat(_T_149, _T_156) @[Cat.scala 29:58]
    node _T_157 = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _T_158 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _T_159 = orr(_T_158) @[AddRecFN.scala 95:45]
    node _T_160 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _T_161 = orr(_T_160) @[AddRecFN.scala 95:98]
    node _T_162 = or(_T_159, _T_161) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_T_157, _T_162) @[Cat.scala 29:58]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _T_163 = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _T_164 = cat(UInt<1>("h1"), _T_163) @[Cat.scala 29:58]
    node far_negAlignedSigSmaller = mux(far_subMags, _T_164, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _T_165 = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _T_166 = add(_T_165, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _T_167 = tail(_T_166, 1) @[AddRecFN.scala 98:41]
    node _T_168 = add(_T_167, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_T_168, 1) @[AddRecFN.scala 98:68]
    node _T_169 = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _T_170 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _T_171 = or(_T_169, _T_170) @[AddRecFN.scala 99:67]
    node _T_172 = mux(far_subMags, far_sigSum, _T_171) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_T_172, 26, 0) @[AddRecFN.scala 99:83]
    node _T_173 = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _T_174 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_T_173, _T_174) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _T_175 = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _T_176 = and(_T_175, closeSubMags) @[AddRecFN.scala 106:58]
    node _T_177 = and(_T_176, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _T_177) @[AddRecFN.scala 106:37]
    node _T_178 = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _T_179 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _T_180 = or(_T_178, _T_179) @[AddRecFN.scala 108:63]
    node _T_181 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _T_182 = or(_T_180, _T_181) @[AddRecFN.scala 109:63]
    node _T_183 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _T_184 = and(notNaN_isZeroOut, _T_183) @[AddRecFN.scala 111:27]
    node _T_185 = and(_T_184, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _T_186 = or(_T_182, _T_185) @[AddRecFN.scala 110:63]
    node _T_187 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _T_188 = and(_T_187, closeSubMags) @[AddRecFN.scala 112:30]
    node _T_189 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _T_190 = and(_T_188, _T_189) @[AddRecFN.scala 112:46]
    node _T_191 = and(_T_190, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _T_192 = or(_T_186, _T_191) @[AddRecFN.scala 111:63]
    node _T_193 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _T_194 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _T_195 = and(_T_193, _T_194) @[AddRecFN.scala 114:30]
    node _T_196 = and(_T_195, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_T_192, _T_196) @[AddRecFN.scala 113:77]
    node _T_197 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _T_198 = or(closeSubMags, _T_197) @[AddRecFN.scala 116:27]
    node _T_199 = mux(_T_198, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _T_200 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _T_201 = cvt(_T_200) @[AddRecFN.scala 117:66]
    node _T_202 = sub(_T_199, _T_201) @[AddRecFN.scala 117:13]
    node _T_203 = tail(_T_202, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_T_203) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _T_204 = bits(io.a.sig, 22, 22) @[common.scala 81:56]
    node _T_205 = eq(_T_204, UInt<1>("h0")) @[common.scala 81:49]
    node _T_206 = and(io.a.isNaN, _T_205) @[common.scala 81:46]
    node _T_207 = bits(io.b.sig, 22, 22) @[common.scala 81:56]
    node _T_208 = eq(_T_207, UInt<1>("h0")) @[common.scala 81:49]
    node _T_209 = and(io.b.isNaN, _T_208) @[common.scala 81:46]
    node _T_210 = or(_T_206, _T_209) @[AddRecFN.scala 121:45]
    node _T_211 = or(_T_210, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _T_211 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _T_212 = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _T_212 @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
  
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _T_2 = and(roundingMode_max, _T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_T, _T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _T_3 = bits(io.in.sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _T_4 = not(_T_3) @[primitives.scala 51:21]
    node _T_5 = bits(_T_4, 8, 8) @[primitives.scala 57:25]
    node _T_6 = bits(_T_4, 7, 0) @[primitives.scala 58:26]
    node _T_7 = bits(_T_6, 7, 7) @[primitives.scala 57:25]
    node _T_8 = bits(_T_6, 6, 0) @[primitives.scala 58:26]
    node _T_9 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_10 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_11 = dshr(asSInt(UInt<65>("h10000000000000000")), _T_10) @[primitives.scala 77:58]
    node _T_12 = bits(_T_11, 63, 42) @[primitives.scala 79:22]
    node _T_13 = bits(_T_12, 15, 0) @[Bitwise.scala 109:18]
    node _T_14 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _T_15 = xor(UInt<16>("hffff"), _T_14) @[Bitwise.scala 102:21]
    node _T_16 = shr(_T_13, 8) @[Bitwise.scala 103:21]
    node _T_17 = and(_T_16, _T_15) @[Bitwise.scala 103:31]
    node _T_18 = bits(_T_13, 7, 0) @[Bitwise.scala 103:46]
    node _T_19 = shl(_T_18, 8) @[Bitwise.scala 103:65]
    node _T_20 = not(_T_15) @[Bitwise.scala 103:77]
    node _T_21 = and(_T_19, _T_20) @[Bitwise.scala 103:75]
    node _T_22 = or(_T_17, _T_21) @[Bitwise.scala 103:39]
    node _T_23 = bits(_T_15, 11, 0) @[Bitwise.scala 102:28]
    node _T_24 = shl(_T_23, 4) @[Bitwise.scala 102:47]
    node _T_25 = xor(_T_15, _T_24) @[Bitwise.scala 102:21]
    node _T_26 = shr(_T_22, 4) @[Bitwise.scala 103:21]
    node _T_27 = and(_T_26, _T_25) @[Bitwise.scala 103:31]
    node _T_28 = bits(_T_22, 11, 0) @[Bitwise.scala 103:46]
    node _T_29 = shl(_T_28, 4) @[Bitwise.scala 103:65]
    node _T_30 = not(_T_25) @[Bitwise.scala 103:77]
    node _T_31 = and(_T_29, _T_30) @[Bitwise.scala 103:75]
    node _T_32 = or(_T_27, _T_31) @[Bitwise.scala 103:39]
    node _T_33 = bits(_T_25, 13, 0) @[Bitwise.scala 102:28]
    node _T_34 = shl(_T_33, 2) @[Bitwise.scala 102:47]
    node _T_35 = xor(_T_25, _T_34) @[Bitwise.scala 102:21]
    node _T_36 = shr(_T_32, 2) @[Bitwise.scala 103:21]
    node _T_37 = and(_T_36, _T_35) @[Bitwise.scala 103:31]
    node _T_38 = bits(_T_32, 13, 0) @[Bitwise.scala 103:46]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 103:65]
    node _T_40 = not(_T_35) @[Bitwise.scala 103:77]
    node _T_41 = and(_T_39, _T_40) @[Bitwise.scala 103:75]
    node _T_42 = or(_T_37, _T_41) @[Bitwise.scala 103:39]
    node _T_43 = bits(_T_35, 14, 0) @[Bitwise.scala 102:28]
    node _T_44 = shl(_T_43, 1) @[Bitwise.scala 102:47]
    node _T_45 = xor(_T_35, _T_44) @[Bitwise.scala 102:21]
    node _T_46 = shr(_T_42, 1) @[Bitwise.scala 103:21]
    node _T_47 = and(_T_46, _T_45) @[Bitwise.scala 103:31]
    node _T_48 = bits(_T_42, 14, 0) @[Bitwise.scala 103:46]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 103:65]
    node _T_50 = not(_T_45) @[Bitwise.scala 103:77]
    node _T_51 = and(_T_49, _T_50) @[Bitwise.scala 103:75]
    node _T_52 = or(_T_47, _T_51) @[Bitwise.scala 103:39]
    node _T_53 = bits(_T_12, 21, 16) @[Bitwise.scala 109:44]
    node _T_54 = bits(_T_53, 3, 0) @[Bitwise.scala 109:18]
    node _T_55 = bits(_T_54, 1, 0) @[Bitwise.scala 109:18]
    node _T_56 = bits(_T_55, 0, 0) @[Bitwise.scala 109:18]
    node _T_57 = bits(_T_55, 1, 1) @[Bitwise.scala 109:44]
    node _T_58 = cat(_T_56, _T_57) @[Cat.scala 29:58]
    node _T_59 = bits(_T_54, 3, 2) @[Bitwise.scala 109:44]
    node _T_60 = bits(_T_59, 0, 0) @[Bitwise.scala 109:18]
    node _T_61 = bits(_T_59, 1, 1) @[Bitwise.scala 109:44]
    node _T_62 = cat(_T_60, _T_61) @[Cat.scala 29:58]
    node _T_63 = cat(_T_58, _T_62) @[Cat.scala 29:58]
    node _T_64 = bits(_T_53, 5, 4) @[Bitwise.scala 109:44]
    node _T_65 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node _T_66 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node _T_67 = cat(_T_65, _T_66) @[Cat.scala 29:58]
    node _T_68 = cat(_T_63, _T_67) @[Cat.scala 29:58]
    node _T_69 = cat(_T_52, _T_68) @[Cat.scala 29:58]
    node _T_70 = not(_T_69) @[primitives.scala 74:36]
    node _T_71 = mux(_T_9, UInt<1>("h0"), _T_70) @[primitives.scala 74:21]
    node _T_72 = not(_T_71) @[primitives.scala 74:17]
    node _T_73 = cat(_T_72, UInt<3>("h7")) @[Cat.scala 29:58]
    node _T_74 = bits(_T_8, 6, 6) @[primitives.scala 57:25]
    node _T_75 = bits(_T_8, 5, 0) @[primitives.scala 58:26]
    node _T_76 = dshr(asSInt(UInt<65>("h10000000000000000")), _T_75) @[primitives.scala 77:58]
    node _T_77 = bits(_T_76, 2, 0) @[primitives.scala 79:22]
    node _T_78 = bits(_T_77, 1, 0) @[Bitwise.scala 109:18]
    node _T_79 = bits(_T_78, 0, 0) @[Bitwise.scala 109:18]
    node _T_80 = bits(_T_78, 1, 1) @[Bitwise.scala 109:44]
    node _T_81 = cat(_T_79, _T_80) @[Cat.scala 29:58]
    node _T_82 = bits(_T_77, 2, 2) @[Bitwise.scala 109:44]
    node _T_83 = cat(_T_81, _T_82) @[Cat.scala 29:58]
    node _T_84 = mux(_T_74, _T_83, UInt<1>("h0")) @[primitives.scala 61:24]
    node _T_85 = mux(_T_7, _T_73, _T_84) @[primitives.scala 66:24]
    node _T_86 = mux(_T_5, _T_85, UInt<1>("h0")) @[primitives.scala 61:24]
    node _T_87 = or(_T_86, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node _T_88 = cat(_T_87, UInt<2>("h3")) @[Cat.scala 29:58]
    node _T_89 = shr(_T_88, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node _T_90 = cat(UInt<1>("h0"), _T_89) @[Cat.scala 29:58]
    node _T_91 = not(_T_90) @[RoundAnyRawFNToRecFN.scala 161:28]
    node _T_92 = and(_T_91, _T_88) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _T_93 = and(adjustedSig, _T_92) @[RoundAnyRawFNToRecFN.scala 162:40]
    node _T_94 = orr(_T_93) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _T_95 = and(adjustedSig, _T_90) @[RoundAnyRawFNToRecFN.scala 163:42]
    node _T_96 = orr(_T_95) @[RoundAnyRawFNToRecFN.scala 163:62]
    node _T_97 = or(_T_94, _T_96) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _T_98 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _T_99 = and(_T_98, _T_94) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _T_100 = and(roundMagUp, _T_97) @[RoundAnyRawFNToRecFN.scala 169:29]
    node _T_101 = or(_T_99, _T_100) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _T_102 = or(adjustedSig, _T_88) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _T_103 = shr(_T_102, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _T_104 = add(_T_103, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _T_105 = and(roundingMode_near_even, _T_94) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _T_106 = eq(_T_96, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _T_107 = and(_T_105, _T_106) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _T_108 = shr(_T_88, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _T_109 = mux(_T_107, _T_108, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _T_110 = not(_T_109) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _T_111 = and(_T_104, _T_110) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _T_112 = not(_T_88) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _T_113 = and(adjustedSig, _T_112) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _T_114 = shr(_T_113, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _T_115 = and(roundingMode_odd, _T_97) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _T_116 = shr(_T_92, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _T_117 = mux(_T_115, _T_116, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _T_118 = or(_T_114, _T_117) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _T_119 = mux(_T_101, _T_111, _T_118) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _T_120 = shr(_T_119, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _T_121 = cvt(_T_120) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _T_122 = add(io.in.sExp, _T_121) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _T_123 = bits(_T_122, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _T_123 @[RoundAnyRawFNToRecFN.scala 185:23]
    node _T_124 = bits(_T_119, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _T_125 = bits(_T_119, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _T_126 = mux(doShiftSigDown1, _T_124, _T_125) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _T_126 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _T_127 = shr(_T_122, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _T_128 = geq(_T_127, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _T_128 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _T_129 = lt(_T_122, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _T_129 @[RoundAnyRawFNToRecFN.scala 195:31]
    node _T_130 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _T_131 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node _T_132 = mux(doShiftSigDown1, _T_130, _T_131) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _T_133 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _T_134 = and(doShiftSigDown1, _T_133) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _T_135 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _T_136 = orr(_T_135) @[RoundAnyRawFNToRecFN.scala 203:70]
    node _T_137 = or(_T_134, _T_136) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _T_138 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _T_139 = and(_T_138, _T_132) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _T_140 = and(roundMagUp, _T_137) @[RoundAnyRawFNToRecFN.scala 207:29]
    node _T_141 = or(_T_139, _T_140) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _T_142 = bits(_T_119, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _T_143 = bits(_T_119, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node _T_144 = mux(doShiftSigDown1, _T_142, _T_143) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _T_145 = shr(io.in.sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _T_146 = leq(_T_145, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _T_147 = and(_T_97, _T_146) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _T_148 = bits(_T_88, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _T_149 = bits(_T_88, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _T_150 = mux(doShiftSigDown1, _T_148, _T_149) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _T_151 = and(_T_147, _T_150) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _T_152 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _T_153 = bits(_T_88, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _T_154 = bits(_T_88, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _T_155 = mux(doShiftSigDown1, _T_153, _T_154) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _T_156 = eq(_T_155, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _T_157 = and(_T_152, _T_156) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _T_158 = and(_T_157, _T_144) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _T_159 = and(_T_158, _T_94) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _T_160 = and(_T_159, _T_141) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _T_161 = eq(_T_160, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _T_162 = and(_T_151, _T_161) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _T_163 = or(common_totalUnderflow, _T_162) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _T_163 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _T_164 = or(common_totalUnderflow, _T_97) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _T_164 @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _T_165 = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _T_166 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _T_167 = and(_T_165, _T_166) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _T_168 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_T_167, _T_168) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _T_169 = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _T_169) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _T_170 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_T_170, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _T_171 = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _T_172 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_T_171, _T_172) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _T_173 = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _T_173) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _T_174 = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _T_174) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _T_175 = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _T_176 = mux(_T_175, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _T_177 = not(_T_176) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _T_178 = and(common_expOut, _T_177) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _T_179 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _T_180 = mux(pegMinNonzeroMagOut, _T_179, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _T_181 = not(_T_180) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _T_182 = and(_T_178, _T_181) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _T_183 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _T_184 = not(_T_183) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _T_185 = and(_T_182, _T_184) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _T_186 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _T_187 = not(_T_186) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _T_188 = and(_T_185, _T_187) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _T_189 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _T_190 = or(_T_188, _T_189) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _T_191 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _T_192 = or(_T_190, _T_191) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _T_193 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _T_194 = or(_T_192, _T_193) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _T_195 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_T_194, _T_195) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _T_196 = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _T_197 = or(_T_196, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _T_198 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _T_199 = mux(_T_197, _T_198, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _T_200 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _T_201 = mux(_T_200, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_T_199, _T_201) @[RoundAnyRawFNToRecFN.scala 281:11]
    node _T_202 = cat(signOut, expOut) @[Cat.scala 29:58]
    node _T_203 = cat(_T_202, fractOut) @[Cat.scala 29:58]
    io.out <= _T_203 @[RoundAnyRawFNToRecFN.scala 284:12]
    node _T_204 = cat(underflow, inexact) @[Cat.scala 29:58]
    node _T_205 = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 29:58]
    node _T_206 = cat(_T_205, overflow) @[Cat.scala 29:58]
    node _T_207 = cat(_T_206, _T_204) @[Cat.scala 29:58]
    io.exceptionFlags <= _T_207 @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<27>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
  
    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN :
    output io : { flip subOp : UInt<1>, flip a : UInt<33>, flip b : UInt<33>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
  
    inst addRawFN of AddRawFN @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node _T = bits(io.a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire _T_5 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    _T_5 is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_6 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_7 = and(_T_4, _T_6) @[rawFloatFromRecFN.scala 55:33]
    _T_5.isNaN <= _T_7 @[rawFloatFromRecFN.scala 55:20]
    node _T_8 = bits(_T, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_9 = eq(_T_8, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _T_10 = and(_T_4, _T_9) @[rawFloatFromRecFN.scala 56:33]
    _T_5.isInf <= _T_10 @[rawFloatFromRecFN.scala 56:20]
    _T_5.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_11 = bits(io.a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    _T_5.sign <= _T_11 @[rawFloatFromRecFN.scala 58:20]
    node _T_12 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    _T_5.sExp <= _T_12 @[rawFloatFromRecFN.scala 59:20]
    node _T_13 = eq(_T_2, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _T_14 = bits(io.a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node _T_15 = cat(UInt<1>("h0"), _T_13) @[Cat.scala 29:58]
    node _T_16 = cat(_T_15, _T_14) @[Cat.scala 29:58]
    _T_5.sig <= _T_16 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= _T_5.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= _T_5.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= _T_5.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= _T_5.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= _T_5.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= _T_5.isNaN @[AddRecFN.scala 150:30]
    node _T_17 = bits(io.b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _T_18 = bits(_T_17, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node _T_19 = eq(_T_18, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _T_20 = bits(_T_17, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node _T_21 = eq(_T_20, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire _T_22 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromRecFN.scala 54:23]
    _T_22 is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_23 = bits(_T_17, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node _T_24 = and(_T_21, _T_23) @[rawFloatFromRecFN.scala 55:33]
    _T_22.isNaN <= _T_24 @[rawFloatFromRecFN.scala 55:20]
    node _T_25 = bits(_T_17, 6, 6) @[rawFloatFromRecFN.scala 56:41]
    node _T_26 = eq(_T_25, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _T_27 = and(_T_21, _T_26) @[rawFloatFromRecFN.scala 56:33]
    _T_22.isInf <= _T_27 @[rawFloatFromRecFN.scala 56:20]
    _T_22.isZero <= _T_19 @[rawFloatFromRecFN.scala 57:20]
    node _T_28 = bits(io.b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    _T_22.sign <= _T_28 @[rawFloatFromRecFN.scala 58:20]
    node _T_29 = cvt(_T_17) @[rawFloatFromRecFN.scala 59:27]
    _T_22.sExp <= _T_29 @[rawFloatFromRecFN.scala 59:20]
    node _T_30 = eq(_T_19, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _T_31 = bits(io.b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node _T_32 = cat(UInt<1>("h0"), _T_30) @[Cat.scala 29:58]
    node _T_33 = cat(_T_32, _T_31) @[Cat.scala 29:58]
    _T_22.sig <= _T_33 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= _T_22.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= _T_22.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= _T_22.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= _T_22.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= _T_22.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= _T_22.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module ValExec_AddRecFN :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip a : UInt<32>, flip b : UInt<32>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, expected : { flip out : UInt<32>, flip exceptionFlags : UInt<5>, recOut : UInt<33>}, actual : { out : UInt<33>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
  
    clock is invalid
    reset is invalid
    io is invalid
    inst addRecFN of AddRecFN @[ValExec_AddRecFN.scala 66:26]
    addRecFN.io is invalid
    addRecFN.io.subOp <= UInt<1>("h0") @[ValExec_AddRecFN.scala 67:23]
    node _T = bits(io.a, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = mux(_T_6, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
    node _T_29 = mux(_T_7, UInt<5>("h14"), _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(_T_8, UInt<5>("h13"), _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(_T_9, UInt<5>("h12"), _T_30) @[Mux.scala 47:69]
    node _T_32 = mux(_T_10, UInt<5>("h11"), _T_31) @[Mux.scala 47:69]
    node _T_33 = mux(_T_11, UInt<5>("h10"), _T_32) @[Mux.scala 47:69]
    node _T_34 = mux(_T_12, UInt<4>("hf"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_13, UInt<4>("he"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_14, UInt<4>("hd"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_15, UInt<4>("hc"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_16, UInt<4>("hb"), _T_37) @[Mux.scala 47:69]
    node _T_39 = mux(_T_17, UInt<4>("ha"), _T_38) @[Mux.scala 47:69]
    node _T_40 = mux(_T_18, UInt<4>("h9"), _T_39) @[Mux.scala 47:69]
    node _T_41 = mux(_T_19, UInt<4>("h8"), _T_40) @[Mux.scala 47:69]
    node _T_42 = mux(_T_20, UInt<3>("h7"), _T_41) @[Mux.scala 47:69]
    node _T_43 = mux(_T_21, UInt<3>("h6"), _T_42) @[Mux.scala 47:69]
    node _T_44 = mux(_T_22, UInt<3>("h5"), _T_43) @[Mux.scala 47:69]
    node _T_45 = mux(_T_23, UInt<3>("h4"), _T_44) @[Mux.scala 47:69]
    node _T_46 = mux(_T_24, UInt<2>("h3"), _T_45) @[Mux.scala 47:69]
    node _T_47 = mux(_T_25, UInt<2>("h2"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_26, UInt<1>("h1"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_27, UInt<1>("h0"), _T_48) @[Mux.scala 47:69]
    node _T_50 = dshl(_T_2, _T_49) @[rawFloatFromFN.scala 54:36]
    node _T_51 = bits(_T_50, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_52 = shl(_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _T_53 = xor(_T_49, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
    node _T_54 = mux(_T_3, _T_53, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_55 = mux(_T_3, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _T_56 = or(UInt<8>("h80"), _T_55) @[rawFloatFromFN.scala 60:22]
    node _T_57 = add(_T_54, _T_56) @[rawFloatFromFN.scala 59:15]
    node _T_58 = tail(_T_57, 1) @[rawFloatFromFN.scala 59:15]
    node _T_59 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_60 = bits(_T_58, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_61 = eq(_T_60, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire _T_62 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _T_62 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_63 = eq(_T_4, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _T_64 = and(_T_61, _T_63) @[rawFloatFromFN.scala 66:33]
    _T_62.isNaN <= _T_64 @[rawFloatFromFN.scala 66:20]
    node _T_65 = and(_T_61, _T_4) @[rawFloatFromFN.scala 67:33]
    _T_62.isInf <= _T_65 @[rawFloatFromFN.scala 67:20]
    _T_62.isZero <= _T_59 @[rawFloatFromFN.scala 68:20]
    _T_62.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_66 = bits(_T_58, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_67 = cvt(_T_66) @[rawFloatFromFN.scala 70:48]
    _T_62.sExp <= _T_67 @[rawFloatFromFN.scala 70:20]
    node _T_68 = eq(_T_59, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _T_69 = mux(_T_3, _T_52, _T_2) @[rawFloatFromFN.scala 72:42]
    node _T_70 = cat(UInt<1>("h0"), _T_68) @[Cat.scala 29:58]
    node _T_71 = cat(_T_70, _T_69) @[Cat.scala 29:58]
    _T_62.sig <= _T_71 @[rawFloatFromFN.scala 71:17]
    node _T_72 = bits(_T_62.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_73 = mux(_T_62.isZero, UInt<3>("h0"), _T_72) @[recFNFromFN.scala 48:16]
    node _T_74 = mux(_T_62.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _T_75 = or(_T_73, _T_74) @[recFNFromFN.scala 48:79]
    node _T_76 = bits(_T_62.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node _T_77 = bits(_T_62.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node _T_78 = cat(_T_76, _T_77) @[Cat.scala 29:58]
    node _T_79 = cat(_T_62.sign, _T_75) @[Cat.scala 29:58]
    node _T_80 = cat(_T_79, _T_78) @[Cat.scala 29:58]
    addRecFN.io.a <= _T_80 @[ValExec_AddRecFN.scala 68:19]
    node _T_81 = bits(io.b, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_82 = bits(io.b, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_83 = bits(io.b, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_84 = eq(_T_82, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node _T_85 = eq(_T_83, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _T_86 = bits(_T_83, 0, 0) @[primitives.scala 92:52]
    node _T_87 = bits(_T_83, 1, 1) @[primitives.scala 92:52]
    node _T_88 = bits(_T_83, 2, 2) @[primitives.scala 92:52]
    node _T_89 = bits(_T_83, 3, 3) @[primitives.scala 92:52]
    node _T_90 = bits(_T_83, 4, 4) @[primitives.scala 92:52]
    node _T_91 = bits(_T_83, 5, 5) @[primitives.scala 92:52]
    node _T_92 = bits(_T_83, 6, 6) @[primitives.scala 92:52]
    node _T_93 = bits(_T_83, 7, 7) @[primitives.scala 92:52]
    node _T_94 = bits(_T_83, 8, 8) @[primitives.scala 92:52]
    node _T_95 = bits(_T_83, 9, 9) @[primitives.scala 92:52]
    node _T_96 = bits(_T_83, 10, 10) @[primitives.scala 92:52]
    node _T_97 = bits(_T_83, 11, 11) @[primitives.scala 92:52]
    node _T_98 = bits(_T_83, 12, 12) @[primitives.scala 92:52]
    node _T_99 = bits(_T_83, 13, 13) @[primitives.scala 92:52]
    node _T_100 = bits(_T_83, 14, 14) @[primitives.scala 92:52]
    node _T_101 = bits(_T_83, 15, 15) @[primitives.scala 92:52]
    node _T_102 = bits(_T_83, 16, 16) @[primitives.scala 92:52]
    node _T_103 = bits(_T_83, 17, 17) @[primitives.scala 92:52]
    node _T_104 = bits(_T_83, 18, 18) @[primitives.scala 92:52]
    node _T_105 = bits(_T_83, 19, 19) @[primitives.scala 92:52]
    node _T_106 = bits(_T_83, 20, 20) @[primitives.scala 92:52]
    node _T_107 = bits(_T_83, 21, 21) @[primitives.scala 92:52]
    node _T_108 = bits(_T_83, 22, 22) @[primitives.scala 92:52]
    node _T_109 = mux(_T_87, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
    node _T_110 = mux(_T_88, UInt<5>("h14"), _T_109) @[Mux.scala 47:69]
    node _T_111 = mux(_T_89, UInt<5>("h13"), _T_110) @[Mux.scala 47:69]
    node _T_112 = mux(_T_90, UInt<5>("h12"), _T_111) @[Mux.scala 47:69]
    node _T_113 = mux(_T_91, UInt<5>("h11"), _T_112) @[Mux.scala 47:69]
    node _T_114 = mux(_T_92, UInt<5>("h10"), _T_113) @[Mux.scala 47:69]
    node _T_115 = mux(_T_93, UInt<4>("hf"), _T_114) @[Mux.scala 47:69]
    node _T_116 = mux(_T_94, UInt<4>("he"), _T_115) @[Mux.scala 47:69]
    node _T_117 = mux(_T_95, UInt<4>("hd"), _T_116) @[Mux.scala 47:69]
    node _T_118 = mux(_T_96, UInt<4>("hc"), _T_117) @[Mux.scala 47:69]
    node _T_119 = mux(_T_97, UInt<4>("hb"), _T_118) @[Mux.scala 47:69]
    node _T_120 = mux(_T_98, UInt<4>("ha"), _T_119) @[Mux.scala 47:69]
    node _T_121 = mux(_T_99, UInt<4>("h9"), _T_120) @[Mux.scala 47:69]
    node _T_122 = mux(_T_100, UInt<4>("h8"), _T_121) @[Mux.scala 47:69]
    node _T_123 = mux(_T_101, UInt<3>("h7"), _T_122) @[Mux.scala 47:69]
    node _T_124 = mux(_T_102, UInt<3>("h6"), _T_123) @[Mux.scala 47:69]
    node _T_125 = mux(_T_103, UInt<3>("h5"), _T_124) @[Mux.scala 47:69]
    node _T_126 = mux(_T_104, UInt<3>("h4"), _T_125) @[Mux.scala 47:69]
    node _T_127 = mux(_T_105, UInt<2>("h3"), _T_126) @[Mux.scala 47:69]
    node _T_128 = mux(_T_106, UInt<2>("h2"), _T_127) @[Mux.scala 47:69]
    node _T_129 = mux(_T_107, UInt<1>("h1"), _T_128) @[Mux.scala 47:69]
    node _T_130 = mux(_T_108, UInt<1>("h0"), _T_129) @[Mux.scala 47:69]
    node _T_131 = dshl(_T_83, _T_130) @[rawFloatFromFN.scala 54:36]
    node _T_132 = bits(_T_131, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_133 = shl(_T_132, 1) @[rawFloatFromFN.scala 54:64]
    node _T_134 = xor(_T_130, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
    node _T_135 = mux(_T_84, _T_134, _T_82) @[rawFloatFromFN.scala 56:16]
    node _T_136 = mux(_T_84, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _T_137 = or(UInt<8>("h80"), _T_136) @[rawFloatFromFN.scala 60:22]
    node _T_138 = add(_T_135, _T_137) @[rawFloatFromFN.scala 59:15]
    node _T_139 = tail(_T_138, 1) @[rawFloatFromFN.scala 59:15]
    node _T_140 = and(_T_84, _T_85) @[rawFloatFromFN.scala 62:34]
    node _T_141 = bits(_T_139, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_142 = eq(_T_141, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire _T_143 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _T_143 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_144 = eq(_T_85, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _T_145 = and(_T_142, _T_144) @[rawFloatFromFN.scala 66:33]
    _T_143.isNaN <= _T_145 @[rawFloatFromFN.scala 66:20]
    node _T_146 = and(_T_142, _T_85) @[rawFloatFromFN.scala 67:33]
    _T_143.isInf <= _T_146 @[rawFloatFromFN.scala 67:20]
    _T_143.isZero <= _T_140 @[rawFloatFromFN.scala 68:20]
    _T_143.sign <= _T_81 @[rawFloatFromFN.scala 69:20]
    node _T_147 = bits(_T_139, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_148 = cvt(_T_147) @[rawFloatFromFN.scala 70:48]
    _T_143.sExp <= _T_148 @[rawFloatFromFN.scala 70:20]
    node _T_149 = eq(_T_140, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _T_150 = mux(_T_84, _T_133, _T_83) @[rawFloatFromFN.scala 72:42]
    node _T_151 = cat(UInt<1>("h0"), _T_149) @[Cat.scala 29:58]
    node _T_152 = cat(_T_151, _T_150) @[Cat.scala 29:58]
    _T_143.sig <= _T_152 @[rawFloatFromFN.scala 71:17]
    node _T_153 = bits(_T_143.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_154 = mux(_T_143.isZero, UInt<3>("h0"), _T_153) @[recFNFromFN.scala 48:16]
    node _T_155 = mux(_T_143.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _T_156 = or(_T_154, _T_155) @[recFNFromFN.scala 48:79]
    node _T_157 = bits(_T_143.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node _T_158 = bits(_T_143.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node _T_159 = cat(_T_157, _T_158) @[Cat.scala 29:58]
    node _T_160 = cat(_T_143.sign, _T_156) @[Cat.scala 29:58]
    node _T_161 = cat(_T_160, _T_159) @[Cat.scala 29:58]
    addRecFN.io.b <= _T_161 @[ValExec_AddRecFN.scala 69:19]
    addRecFN.io.roundingMode <= io.roundingMode @[ValExec_AddRecFN.scala 70:32]
    addRecFN.io.detectTininess <= io.detectTininess @[ValExec_AddRecFN.scala 71:32]
    node _T_162 = bits(io.expected.out, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_163 = bits(io.expected.out, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_164 = bits(io.expected.out, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_165 = eq(_T_163, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node _T_166 = eq(_T_164, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _T_167 = bits(_T_164, 0, 0) @[primitives.scala 92:52]
    node _T_168 = bits(_T_164, 1, 1) @[primitives.scala 92:52]
    node _T_169 = bits(_T_164, 2, 2) @[primitives.scala 92:52]
    node _T_170 = bits(_T_164, 3, 3) @[primitives.scala 92:52]
    node _T_171 = bits(_T_164, 4, 4) @[primitives.scala 92:52]
    node _T_172 = bits(_T_164, 5, 5) @[primitives.scala 92:52]
    node _T_173 = bits(_T_164, 6, 6) @[primitives.scala 92:52]
    node _T_174 = bits(_T_164, 7, 7) @[primitives.scala 92:52]
    node _T_175 = bits(_T_164, 8, 8) @[primitives.scala 92:52]
    node _T_176 = bits(_T_164, 9, 9) @[primitives.scala 92:52]
    node _T_177 = bits(_T_164, 10, 10) @[primitives.scala 92:52]
    node _T_178 = bits(_T_164, 11, 11) @[primitives.scala 92:52]
    node _T_179 = bits(_T_164, 12, 12) @[primitives.scala 92:52]
    node _T_180 = bits(_T_164, 13, 13) @[primitives.scala 92:52]
    node _T_181 = bits(_T_164, 14, 14) @[primitives.scala 92:52]
    node _T_182 = bits(_T_164, 15, 15) @[primitives.scala 92:52]
    node _T_183 = bits(_T_164, 16, 16) @[primitives.scala 92:52]
    node _T_184 = bits(_T_164, 17, 17) @[primitives.scala 92:52]
    node _T_185 = bits(_T_164, 18, 18) @[primitives.scala 92:52]
    node _T_186 = bits(_T_164, 19, 19) @[primitives.scala 92:52]
    node _T_187 = bits(_T_164, 20, 20) @[primitives.scala 92:52]
    node _T_188 = bits(_T_164, 21, 21) @[primitives.scala 92:52]
    node _T_189 = bits(_T_164, 22, 22) @[primitives.scala 92:52]
    node _T_190 = mux(_T_168, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
    node _T_191 = mux(_T_169, UInt<5>("h14"), _T_190) @[Mux.scala 47:69]
    node _T_192 = mux(_T_170, UInt<5>("h13"), _T_191) @[Mux.scala 47:69]
    node _T_193 = mux(_T_171, UInt<5>("h12"), _T_192) @[Mux.scala 47:69]
    node _T_194 = mux(_T_172, UInt<5>("h11"), _T_193) @[Mux.scala 47:69]
    node _T_195 = mux(_T_173, UInt<5>("h10"), _T_194) @[Mux.scala 47:69]
    node _T_196 = mux(_T_174, UInt<4>("hf"), _T_195) @[Mux.scala 47:69]
    node _T_197 = mux(_T_175, UInt<4>("he"), _T_196) @[Mux.scala 47:69]
    node _T_198 = mux(_T_176, UInt<4>("hd"), _T_197) @[Mux.scala 47:69]
    node _T_199 = mux(_T_177, UInt<4>("hc"), _T_198) @[Mux.scala 47:69]
    node _T_200 = mux(_T_178, UInt<4>("hb"), _T_199) @[Mux.scala 47:69]
    node _T_201 = mux(_T_179, UInt<4>("ha"), _T_200) @[Mux.scala 47:69]
    node _T_202 = mux(_T_180, UInt<4>("h9"), _T_201) @[Mux.scala 47:69]
    node _T_203 = mux(_T_181, UInt<4>("h8"), _T_202) @[Mux.scala 47:69]
    node _T_204 = mux(_T_182, UInt<3>("h7"), _T_203) @[Mux.scala 47:69]
    node _T_205 = mux(_T_183, UInt<3>("h6"), _T_204) @[Mux.scala 47:69]
    node _T_206 = mux(_T_184, UInt<3>("h5"), _T_205) @[Mux.scala 47:69]
    node _T_207 = mux(_T_185, UInt<3>("h4"), _T_206) @[Mux.scala 47:69]
    node _T_208 = mux(_T_186, UInt<2>("h3"), _T_207) @[Mux.scala 47:69]
    node _T_209 = mux(_T_187, UInt<2>("h2"), _T_208) @[Mux.scala 47:69]
    node _T_210 = mux(_T_188, UInt<1>("h1"), _T_209) @[Mux.scala 47:69]
    node _T_211 = mux(_T_189, UInt<1>("h0"), _T_210) @[Mux.scala 47:69]
    node _T_212 = dshl(_T_164, _T_211) @[rawFloatFromFN.scala 54:36]
    node _T_213 = bits(_T_212, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_214 = shl(_T_213, 1) @[rawFloatFromFN.scala 54:64]
    node _T_215 = xor(_T_211, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
    node _T_216 = mux(_T_165, _T_215, _T_163) @[rawFloatFromFN.scala 56:16]
    node _T_217 = mux(_T_165, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _T_218 = or(UInt<8>("h80"), _T_217) @[rawFloatFromFN.scala 60:22]
    node _T_219 = add(_T_216, _T_218) @[rawFloatFromFN.scala 59:15]
    node _T_220 = tail(_T_219, 1) @[rawFloatFromFN.scala 59:15]
    node _T_221 = and(_T_165, _T_166) @[rawFloatFromFN.scala 62:34]
    node _T_222 = bits(_T_220, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_223 = eq(_T_222, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire _T_224 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _T_224 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_225 = eq(_T_166, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _T_226 = and(_T_223, _T_225) @[rawFloatFromFN.scala 66:33]
    _T_224.isNaN <= _T_226 @[rawFloatFromFN.scala 66:20]
    node _T_227 = and(_T_223, _T_166) @[rawFloatFromFN.scala 67:33]
    _T_224.isInf <= _T_227 @[rawFloatFromFN.scala 67:20]
    _T_224.isZero <= _T_221 @[rawFloatFromFN.scala 68:20]
    _T_224.sign <= _T_162 @[rawFloatFromFN.scala 69:20]
    node _T_228 = bits(_T_220, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_229 = cvt(_T_228) @[rawFloatFromFN.scala 70:48]
    _T_224.sExp <= _T_229 @[rawFloatFromFN.scala 70:20]
    node _T_230 = eq(_T_221, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _T_231 = mux(_T_165, _T_214, _T_164) @[rawFloatFromFN.scala 72:42]
    node _T_232 = cat(UInt<1>("h0"), _T_230) @[Cat.scala 29:58]
    node _T_233 = cat(_T_232, _T_231) @[Cat.scala 29:58]
    _T_224.sig <= _T_233 @[rawFloatFromFN.scala 71:17]
    node _T_234 = bits(_T_224.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_235 = mux(_T_224.isZero, UInt<3>("h0"), _T_234) @[recFNFromFN.scala 48:16]
    node _T_236 = mux(_T_224.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _T_237 = or(_T_235, _T_236) @[recFNFromFN.scala 48:79]
    node _T_238 = bits(_T_224.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node _T_239 = bits(_T_224.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node _T_240 = cat(_T_238, _T_239) @[Cat.scala 29:58]
    node _T_241 = cat(_T_224.sign, _T_237) @[Cat.scala 29:58]
    node _T_242 = cat(_T_241, _T_240) @[Cat.scala 29:58]
    io.expected.recOut <= _T_242 @[ValExec_AddRecFN.scala 73:24]
    io.actual.out <= addRecFN.io.out @[ValExec_AddRecFN.scala 75:19]
    io.actual.exceptionFlags <= addRecFN.io.exceptionFlags @[ValExec_AddRecFN.scala 76:30]
    io.check <= UInt<1>("h1") @[ValExec_AddRecFN.scala 78:14]
    node _T_243 = bits(io.actual.out, 32, 29) @[package.scala 46:22]
    node _T_244 = bits(io.expected.recOut, 32, 29) @[package.scala 47:22]
    node _T_245 = bits(_T_243, 2, 0) @[package.scala 48:19]
    node _T_246 = eq(_T_245, UInt<1>("h0")) @[package.scala 48:26]
    node _T_247 = bits(_T_243, 2, 0) @[package.scala 48:44]
    node _T_248 = eq(_T_247, UInt<3>("h7")) @[package.scala 48:51]
    node _T_249 = or(_T_246, _T_248) @[package.scala 48:35]
    node _T_250 = eq(_T_243, _T_244) @[package.scala 49:20]
    node _T_251 = bits(io.actual.out, 22, 0) @[package.scala 49:36]
    node _T_252 = bits(io.expected.recOut, 22, 0) @[package.scala 49:59]
    node _T_253 = eq(_T_251, _T_252) @[package.scala 49:54]
    node _T_254 = and(_T_250, _T_253) @[package.scala 49:31]
    node _T_255 = bits(_T_243, 2, 0) @[package.scala 50:23]
    node _T_256 = eq(_T_255, UInt<3>("h6")) @[package.scala 50:30]
    node _T_257 = eq(_T_243, _T_244) @[package.scala 50:47]
    node _T_258 = eq(io.actual.out, io.expected.recOut) @[package.scala 50:62]
    node _T_259 = mux(_T_256, _T_257, _T_258) @[package.scala 50:16]
    node _T_260 = mux(_T_249, _T_254, _T_259) @[package.scala 48:12]
    node _T_261 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_AddRecFN.scala 81:35]
    node _T_262 = and(_T_260, _T_261) @[ValExec_AddRecFN.scala 80:75]
    io.pass <= _T_262 @[ValExec_AddRecFN.scala 79:13]
