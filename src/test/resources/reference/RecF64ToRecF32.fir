circuit ValExec_RecFNToRecFN :
  module RoundAnyRawFNToRecFN :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
  
    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _T_2 = and(roundingMode_max, _T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_T, _T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node sAdjustedExp = add(io.in.sExp, asSInt(UInt<12>("h900"))) @[RoundAnyRawFNToRecFN.scala 108:24]
    node _T_3 = bits(io.in.sig, 53, 28) @[RoundAnyRawFNToRecFN.scala 114:26]
    node _T_4 = bits(io.in.sig, 27, 0) @[RoundAnyRawFNToRecFN.scala 115:26]
    node _T_5 = orr(_T_4) @[RoundAnyRawFNToRecFN.scala 115:60]
    node adjustedSig = cat(_T_3, _T_5) @[Cat.scala 29:58]
    wire common_expOut : UInt<9> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<23> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _T_6 = bits(sAdjustedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _T_7 = not(_T_6) @[primitives.scala 51:21]
    node _T_8 = bits(_T_7, 8, 8) @[primitives.scala 57:25]
    node _T_9 = bits(_T_7, 7, 0) @[primitives.scala 58:26]
    node _T_10 = bits(_T_9, 7, 7) @[primitives.scala 57:25]
    node _T_11 = bits(_T_9, 6, 0) @[primitives.scala 58:26]
    node _T_12 = bits(_T_11, 6, 6) @[primitives.scala 57:25]
    node _T_13 = bits(_T_11, 5, 0) @[primitives.scala 58:26]
    node _T_14 = dshr(asSInt(UInt<65>("h10000000000000000")), _T_13) @[primitives.scala 77:58]
    node _T_15 = bits(_T_14, 63, 42) @[primitives.scala 79:22]
    node _T_16 = bits(_T_15, 15, 0) @[Bitwise.scala 109:18]
    node _T_17 = shl(UInt<8>("hff"), 8) @[Bitwise.scala 102:47]
    node _T_18 = xor(UInt<16>("hffff"), _T_17) @[Bitwise.scala 102:21]
    node _T_19 = shr(_T_16, 8) @[Bitwise.scala 103:21]
    node _T_20 = and(_T_19, _T_18) @[Bitwise.scala 103:31]
    node _T_21 = bits(_T_16, 7, 0) @[Bitwise.scala 103:46]
    node _T_22 = shl(_T_21, 8) @[Bitwise.scala 103:65]
    node _T_23 = not(_T_18) @[Bitwise.scala 103:77]
    node _T_24 = and(_T_22, _T_23) @[Bitwise.scala 103:75]
    node _T_25 = or(_T_20, _T_24) @[Bitwise.scala 103:39]
    node _T_26 = bits(_T_18, 11, 0) @[Bitwise.scala 102:28]
    node _T_27 = shl(_T_26, 4) @[Bitwise.scala 102:47]
    node _T_28 = xor(_T_18, _T_27) @[Bitwise.scala 102:21]
    node _T_29 = shr(_T_25, 4) @[Bitwise.scala 103:21]
    node _T_30 = and(_T_29, _T_28) @[Bitwise.scala 103:31]
    node _T_31 = bits(_T_25, 11, 0) @[Bitwise.scala 103:46]
    node _T_32 = shl(_T_31, 4) @[Bitwise.scala 103:65]
    node _T_33 = not(_T_28) @[Bitwise.scala 103:77]
    node _T_34 = and(_T_32, _T_33) @[Bitwise.scala 103:75]
    node _T_35 = or(_T_30, _T_34) @[Bitwise.scala 103:39]
    node _T_36 = bits(_T_28, 13, 0) @[Bitwise.scala 102:28]
    node _T_37 = shl(_T_36, 2) @[Bitwise.scala 102:47]
    node _T_38 = xor(_T_28, _T_37) @[Bitwise.scala 102:21]
    node _T_39 = shr(_T_35, 2) @[Bitwise.scala 103:21]
    node _T_40 = and(_T_39, _T_38) @[Bitwise.scala 103:31]
    node _T_41 = bits(_T_35, 13, 0) @[Bitwise.scala 103:46]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 103:65]
    node _T_43 = not(_T_38) @[Bitwise.scala 103:77]
    node _T_44 = and(_T_42, _T_43) @[Bitwise.scala 103:75]
    node _T_45 = or(_T_40, _T_44) @[Bitwise.scala 103:39]
    node _T_46 = bits(_T_38, 14, 0) @[Bitwise.scala 102:28]
    node _T_47 = shl(_T_46, 1) @[Bitwise.scala 102:47]
    node _T_48 = xor(_T_38, _T_47) @[Bitwise.scala 102:21]
    node _T_49 = shr(_T_45, 1) @[Bitwise.scala 103:21]
    node _T_50 = and(_T_49, _T_48) @[Bitwise.scala 103:31]
    node _T_51 = bits(_T_45, 14, 0) @[Bitwise.scala 103:46]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 103:65]
    node _T_53 = not(_T_48) @[Bitwise.scala 103:77]
    node _T_54 = and(_T_52, _T_53) @[Bitwise.scala 103:75]
    node _T_55 = or(_T_50, _T_54) @[Bitwise.scala 103:39]
    node _T_56 = bits(_T_15, 21, 16) @[Bitwise.scala 109:44]
    node _T_57 = bits(_T_56, 3, 0) @[Bitwise.scala 109:18]
    node _T_58 = bits(_T_57, 1, 0) @[Bitwise.scala 109:18]
    node _T_59 = bits(_T_58, 0, 0) @[Bitwise.scala 109:18]
    node _T_60 = bits(_T_58, 1, 1) @[Bitwise.scala 109:44]
    node _T_61 = cat(_T_59, _T_60) @[Cat.scala 29:58]
    node _T_62 = bits(_T_57, 3, 2) @[Bitwise.scala 109:44]
    node _T_63 = bits(_T_62, 0, 0) @[Bitwise.scala 109:18]
    node _T_64 = bits(_T_62, 1, 1) @[Bitwise.scala 109:44]
    node _T_65 = cat(_T_63, _T_64) @[Cat.scala 29:58]
    node _T_66 = cat(_T_61, _T_65) @[Cat.scala 29:58]
    node _T_67 = bits(_T_56, 5, 4) @[Bitwise.scala 109:44]
    node _T_68 = bits(_T_67, 0, 0) @[Bitwise.scala 109:18]
    node _T_69 = bits(_T_67, 1, 1) @[Bitwise.scala 109:44]
    node _T_70 = cat(_T_68, _T_69) @[Cat.scala 29:58]
    node _T_71 = cat(_T_66, _T_70) @[Cat.scala 29:58]
    node _T_72 = cat(_T_55, _T_71) @[Cat.scala 29:58]
    node _T_73 = not(_T_72) @[primitives.scala 74:36]
    node _T_74 = mux(_T_12, UInt<1>("h0"), _T_73) @[primitives.scala 74:21]
    node _T_75 = not(_T_74) @[primitives.scala 74:17]
    node _T_76 = cat(_T_75, UInt<3>("h7")) @[Cat.scala 29:58]
    node _T_77 = bits(_T_11, 6, 6) @[primitives.scala 57:25]
    node _T_78 = bits(_T_11, 5, 0) @[primitives.scala 58:26]
    node _T_79 = dshr(asSInt(UInt<65>("h10000000000000000")), _T_78) @[primitives.scala 77:58]
    node _T_80 = bits(_T_79, 2, 0) @[primitives.scala 79:22]
    node _T_81 = bits(_T_80, 1, 0) @[Bitwise.scala 109:18]
    node _T_82 = bits(_T_81, 0, 0) @[Bitwise.scala 109:18]
    node _T_83 = bits(_T_81, 1, 1) @[Bitwise.scala 109:44]
    node _T_84 = cat(_T_82, _T_83) @[Cat.scala 29:58]
    node _T_85 = bits(_T_80, 2, 2) @[Bitwise.scala 109:44]
    node _T_86 = cat(_T_84, _T_85) @[Cat.scala 29:58]
    node _T_87 = mux(_T_77, _T_86, UInt<1>("h0")) @[primitives.scala 61:24]
    node _T_88 = mux(_T_10, _T_76, _T_87) @[primitives.scala 66:24]
    node _T_89 = mux(_T_8, _T_88, UInt<1>("h0")) @[primitives.scala 61:24]
    node _T_90 = or(_T_89, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 157:23]
    node _T_91 = cat(_T_90, UInt<2>("h3")) @[Cat.scala 29:58]
    node _T_92 = shr(_T_91, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node _T_93 = cat(UInt<1>("h0"), _T_92) @[Cat.scala 29:58]
    node _T_94 = not(_T_93) @[RoundAnyRawFNToRecFN.scala 161:28]
    node _T_95 = and(_T_94, _T_91) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _T_96 = and(adjustedSig, _T_95) @[RoundAnyRawFNToRecFN.scala 162:40]
    node _T_97 = orr(_T_96) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _T_98 = and(adjustedSig, _T_93) @[RoundAnyRawFNToRecFN.scala 163:42]
    node _T_99 = orr(_T_98) @[RoundAnyRawFNToRecFN.scala 163:62]
    node _T_100 = or(_T_97, _T_99) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _T_101 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _T_102 = and(_T_101, _T_97) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _T_103 = and(roundMagUp, _T_100) @[RoundAnyRawFNToRecFN.scala 169:29]
    node _T_104 = or(_T_102, _T_103) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _T_105 = or(adjustedSig, _T_91) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _T_106 = shr(_T_105, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _T_107 = add(_T_106, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _T_108 = and(roundingMode_near_even, _T_97) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _T_109 = eq(_T_99, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _T_110 = and(_T_108, _T_109) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _T_111 = shr(_T_91, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _T_112 = mux(_T_110, _T_111, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _T_113 = not(_T_112) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _T_114 = and(_T_107, _T_113) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _T_115 = not(_T_91) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _T_116 = and(adjustedSig, _T_115) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _T_117 = shr(_T_116, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _T_118 = and(roundingMode_odd, _T_100) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _T_119 = shr(_T_95, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _T_120 = mux(_T_118, _T_119, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _T_121 = or(_T_117, _T_120) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _T_122 = mux(_T_104, _T_114, _T_121) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _T_123 = shr(_T_122, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _T_124 = cvt(_T_123) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _T_125 = add(sAdjustedExp, _T_124) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _T_126 = bits(_T_125, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _T_126 @[RoundAnyRawFNToRecFN.scala 185:23]
    node _T_127 = bits(_T_122, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _T_128 = bits(_T_122, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _T_129 = mux(UInt<1>("h0"), _T_127, _T_128) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _T_129 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _T_130 = shr(_T_125, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _T_131 = geq(_T_130, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _T_131 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _T_132 = lt(_T_125, asSInt(UInt<8>("h6b"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _T_132 @[RoundAnyRawFNToRecFN.scala 195:31]
    node _T_133 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _T_134 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node _T_135 = mux(UInt<1>("h0"), _T_133, _T_134) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _T_136 = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _T_137 = and(UInt<1>("h0"), _T_136) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _T_138 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _T_139 = orr(_T_138) @[RoundAnyRawFNToRecFN.scala 203:70]
    node _T_140 = or(_T_137, _T_139) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _T_141 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _T_142 = and(_T_141, _T_135) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _T_143 = and(roundMagUp, _T_140) @[RoundAnyRawFNToRecFN.scala 207:29]
    node _T_144 = or(_T_142, _T_143) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _T_145 = bits(_T_122, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _T_146 = bits(_T_122, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node _T_147 = mux(UInt<1>("h0"), _T_145, _T_146) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _T_148 = shr(sAdjustedExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _T_149 = leq(_T_148, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _T_150 = and(_T_100, _T_149) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _T_151 = bits(_T_91, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _T_152 = bits(_T_91, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _T_153 = mux(UInt<1>("h0"), _T_151, _T_152) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _T_154 = and(_T_150, _T_153) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _T_155 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _T_156 = bits(_T_91, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _T_157 = bits(_T_91, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _T_158 = mux(UInt<1>("h0"), _T_156, _T_157) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _T_159 = eq(_T_158, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _T_160 = and(_T_155, _T_159) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _T_161 = and(_T_160, _T_147) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _T_162 = and(_T_161, _T_97) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _T_163 = and(_T_162, _T_144) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _T_164 = eq(_T_163, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _T_165 = and(_T_154, _T_164) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _T_166 = or(common_totalUnderflow, _T_165) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _T_166 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _T_167 = or(common_totalUnderflow, _T_100) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _T_167 @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _T_168 = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _T_169 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _T_170 = and(_T_168, _T_169) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _T_171 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_T_170, _T_171) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _T_172 = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _T_172) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _T_173 = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_T_173, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _T_174 = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _T_175 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_T_174, _T_175) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _T_176 = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _T_176) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _T_177 = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _T_177) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _T_178 = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _T_179 = mux(_T_178, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _T_180 = not(_T_179) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _T_181 = and(common_expOut, _T_180) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _T_182 = not(UInt<9>("h6b")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _T_183 = mux(pegMinNonzeroMagOut, _T_182, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _T_184 = not(_T_183) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _T_185 = and(_T_181, _T_184) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _T_186 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _T_187 = not(_T_186) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _T_188 = and(_T_185, _T_187) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _T_189 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _T_190 = not(_T_189) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _T_191 = and(_T_188, _T_190) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _T_192 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _T_193 = or(_T_191, _T_192) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _T_194 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _T_195 = or(_T_193, _T_194) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _T_196 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _T_197 = or(_T_195, _T_196) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _T_198 = mux(isNaNOut, UInt<9>("h1c0"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_T_197, _T_198) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _T_199 = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _T_200 = or(_T_199, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _T_201 = mux(isNaNOut, UInt<23>("h400000"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _T_202 = mux(_T_200, _T_201, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _T_203 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 72:15]
    node _T_204 = mux(_T_203, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_T_202, _T_204) @[RoundAnyRawFNToRecFN.scala 281:11]
    node _T_205 = cat(signOut, expOut) @[Cat.scala 29:58]
    node _T_206 = cat(_T_205, fractOut) @[Cat.scala 29:58]
    io.out <= _T_206 @[RoundAnyRawFNToRecFN.scala 284:12]
    node _T_207 = cat(underflow, inexact) @[Cat.scala 29:58]
    node _T_208 = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 29:58]
    node _T_209 = cat(_T_208, overflow) @[Cat.scala 29:58]
    node _T_210 = cat(_T_209, _T_207) @[Cat.scala 29:58]
    io.exceptionFlags <= _T_210 @[RoundAnyRawFNToRecFN.scala 285:23]

  module RecFNToRecFN :
    output io : { flip in : UInt<65>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<33>, exceptionFlags : UInt<5>}
  
    io is invalid
    node _T = bits(io.in, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromRecFN.scala 54:23]
    rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawIn.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 9, 9) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawIn.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawIn.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.in, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    rawIn.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawIn.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node _T_12 = eq(_T_2, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _T_13 = bits(io.in, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node _T_14 = cat(UInt<1>("h0"), _T_12) @[Cat.scala 29:58]
    node _T_15 = cat(_T_14, _T_13) @[Cat.scala 29:58]
    rawIn.sig <= _T_15 @[rawFloatFromRecFN.scala 60:20]
    inst RoundAnyRawFNToRecFN of RoundAnyRawFNToRecFN @[RecFNToRecFN.scala 72:19]
    RoundAnyRawFNToRecFN.io is invalid
    node _T_16 = bits(rawIn.sig, 51, 51) @[common.scala 81:56]
    node _T_17 = eq(_T_16, UInt<1>("h0")) @[common.scala 81:49]
    node _T_18 = and(rawIn.isNaN, _T_17) @[common.scala 81:46]
    RoundAnyRawFNToRecFN.io.invalidExc <= _T_18 @[RecFNToRecFN.scala 80:48]
    RoundAnyRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[RecFNToRecFN.scala 81:48]
    RoundAnyRawFNToRecFN.io.in <- rawIn @[RecFNToRecFN.scala 82:48]
    RoundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RecFNToRecFN.scala 83:48]
    RoundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RecFNToRecFN.scala 84:48]
    io.out <= RoundAnyRawFNToRecFN.io.out @[RecFNToRecFN.scala 85:27]
    io.exceptionFlags <= RoundAnyRawFNToRecFN.io.exceptionFlags @[RecFNToRecFN.scala 86:27]

  module ValExec_RecFNToRecFN :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip in : UInt<64>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, expected : { flip out : UInt<32>, flip exceptionFlags : UInt<5>, recOut : UInt<33>}, actual : { out : UInt<33>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
  
    clock is invalid
    reset is invalid
    io is invalid
    inst recFNToRecFN of RecFNToRecFN @[ValExec_RecFNToRecFN.scala 69:15]
    recFNToRecFN.io is invalid
    node _T = bits(io.in, 63, 63) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.in, 62, 52) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.in, 51, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = bits(_T_2, 23, 23) @[primitives.scala 92:52]
    node _T_29 = bits(_T_2, 24, 24) @[primitives.scala 92:52]
    node _T_30 = bits(_T_2, 25, 25) @[primitives.scala 92:52]
    node _T_31 = bits(_T_2, 26, 26) @[primitives.scala 92:52]
    node _T_32 = bits(_T_2, 27, 27) @[primitives.scala 92:52]
    node _T_33 = bits(_T_2, 28, 28) @[primitives.scala 92:52]
    node _T_34 = bits(_T_2, 29, 29) @[primitives.scala 92:52]
    node _T_35 = bits(_T_2, 30, 30) @[primitives.scala 92:52]
    node _T_36 = bits(_T_2, 31, 31) @[primitives.scala 92:52]
    node _T_37 = bits(_T_2, 32, 32) @[primitives.scala 92:52]
    node _T_38 = bits(_T_2, 33, 33) @[primitives.scala 92:52]
    node _T_39 = bits(_T_2, 34, 34) @[primitives.scala 92:52]
    node _T_40 = bits(_T_2, 35, 35) @[primitives.scala 92:52]
    node _T_41 = bits(_T_2, 36, 36) @[primitives.scala 92:52]
    node _T_42 = bits(_T_2, 37, 37) @[primitives.scala 92:52]
    node _T_43 = bits(_T_2, 38, 38) @[primitives.scala 92:52]
    node _T_44 = bits(_T_2, 39, 39) @[primitives.scala 92:52]
    node _T_45 = bits(_T_2, 40, 40) @[primitives.scala 92:52]
    node _T_46 = bits(_T_2, 41, 41) @[primitives.scala 92:52]
    node _T_47 = bits(_T_2, 42, 42) @[primitives.scala 92:52]
    node _T_48 = bits(_T_2, 43, 43) @[primitives.scala 92:52]
    node _T_49 = bits(_T_2, 44, 44) @[primitives.scala 92:52]
    node _T_50 = bits(_T_2, 45, 45) @[primitives.scala 92:52]
    node _T_51 = bits(_T_2, 46, 46) @[primitives.scala 92:52]
    node _T_52 = bits(_T_2, 47, 47) @[primitives.scala 92:52]
    node _T_53 = bits(_T_2, 48, 48) @[primitives.scala 92:52]
    node _T_54 = bits(_T_2, 49, 49) @[primitives.scala 92:52]
    node _T_55 = bits(_T_2, 50, 50) @[primitives.scala 92:52]
    node _T_56 = bits(_T_2, 51, 51) @[primitives.scala 92:52]
    node _T_57 = mux(_T_6, UInt<6>("h32"), UInt<6>("h33")) @[Mux.scala 47:69]
    node _T_58 = mux(_T_7, UInt<6>("h31"), _T_57) @[Mux.scala 47:69]
    node _T_59 = mux(_T_8, UInt<6>("h30"), _T_58) @[Mux.scala 47:69]
    node _T_60 = mux(_T_9, UInt<6>("h2f"), _T_59) @[Mux.scala 47:69]
    node _T_61 = mux(_T_10, UInt<6>("h2e"), _T_60) @[Mux.scala 47:69]
    node _T_62 = mux(_T_11, UInt<6>("h2d"), _T_61) @[Mux.scala 47:69]
    node _T_63 = mux(_T_12, UInt<6>("h2c"), _T_62) @[Mux.scala 47:69]
    node _T_64 = mux(_T_13, UInt<6>("h2b"), _T_63) @[Mux.scala 47:69]
    node _T_65 = mux(_T_14, UInt<6>("h2a"), _T_64) @[Mux.scala 47:69]
    node _T_66 = mux(_T_15, UInt<6>("h29"), _T_65) @[Mux.scala 47:69]
    node _T_67 = mux(_T_16, UInt<6>("h28"), _T_66) @[Mux.scala 47:69]
    node _T_68 = mux(_T_17, UInt<6>("h27"), _T_67) @[Mux.scala 47:69]
    node _T_69 = mux(_T_18, UInt<6>("h26"), _T_68) @[Mux.scala 47:69]
    node _T_70 = mux(_T_19, UInt<6>("h25"), _T_69) @[Mux.scala 47:69]
    node _T_71 = mux(_T_20, UInt<6>("h24"), _T_70) @[Mux.scala 47:69]
    node _T_72 = mux(_T_21, UInt<6>("h23"), _T_71) @[Mux.scala 47:69]
    node _T_73 = mux(_T_22, UInt<6>("h22"), _T_72) @[Mux.scala 47:69]
    node _T_74 = mux(_T_23, UInt<6>("h21"), _T_73) @[Mux.scala 47:69]
    node _T_75 = mux(_T_24, UInt<6>("h20"), _T_74) @[Mux.scala 47:69]
    node _T_76 = mux(_T_25, UInt<5>("h1f"), _T_75) @[Mux.scala 47:69]
    node _T_77 = mux(_T_26, UInt<5>("h1e"), _T_76) @[Mux.scala 47:69]
    node _T_78 = mux(_T_27, UInt<5>("h1d"), _T_77) @[Mux.scala 47:69]
    node _T_79 = mux(_T_28, UInt<5>("h1c"), _T_78) @[Mux.scala 47:69]
    node _T_80 = mux(_T_29, UInt<5>("h1b"), _T_79) @[Mux.scala 47:69]
    node _T_81 = mux(_T_30, UInt<5>("h1a"), _T_80) @[Mux.scala 47:69]
    node _T_82 = mux(_T_31, UInt<5>("h19"), _T_81) @[Mux.scala 47:69]
    node _T_83 = mux(_T_32, UInt<5>("h18"), _T_82) @[Mux.scala 47:69]
    node _T_84 = mux(_T_33, UInt<5>("h17"), _T_83) @[Mux.scala 47:69]
    node _T_85 = mux(_T_34, UInt<5>("h16"), _T_84) @[Mux.scala 47:69]
    node _T_86 = mux(_T_35, UInt<5>("h15"), _T_85) @[Mux.scala 47:69]
    node _T_87 = mux(_T_36, UInt<5>("h14"), _T_86) @[Mux.scala 47:69]
    node _T_88 = mux(_T_37, UInt<5>("h13"), _T_87) @[Mux.scala 47:69]
    node _T_89 = mux(_T_38, UInt<5>("h12"), _T_88) @[Mux.scala 47:69]
    node _T_90 = mux(_T_39, UInt<5>("h11"), _T_89) @[Mux.scala 47:69]
    node _T_91 = mux(_T_40, UInt<5>("h10"), _T_90) @[Mux.scala 47:69]
    node _T_92 = mux(_T_41, UInt<4>("hf"), _T_91) @[Mux.scala 47:69]
    node _T_93 = mux(_T_42, UInt<4>("he"), _T_92) @[Mux.scala 47:69]
    node _T_94 = mux(_T_43, UInt<4>("hd"), _T_93) @[Mux.scala 47:69]
    node _T_95 = mux(_T_44, UInt<4>("hc"), _T_94) @[Mux.scala 47:69]
    node _T_96 = mux(_T_45, UInt<4>("hb"), _T_95) @[Mux.scala 47:69]
    node _T_97 = mux(_T_46, UInt<4>("ha"), _T_96) @[Mux.scala 47:69]
    node _T_98 = mux(_T_47, UInt<4>("h9"), _T_97) @[Mux.scala 47:69]
    node _T_99 = mux(_T_48, UInt<4>("h8"), _T_98) @[Mux.scala 47:69]
    node _T_100 = mux(_T_49, UInt<3>("h7"), _T_99) @[Mux.scala 47:69]
    node _T_101 = mux(_T_50, UInt<3>("h6"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_51, UInt<3>("h5"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_52, UInt<3>("h4"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_53, UInt<2>("h3"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_54, UInt<2>("h2"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_55, UInt<1>("h1"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_56, UInt<1>("h0"), _T_106) @[Mux.scala 47:69]
    node _T_108 = dshl(_T_2, _T_107) @[rawFloatFromFN.scala 54:36]
    node _T_109 = bits(_T_108, 50, 0) @[rawFloatFromFN.scala 54:47]
    node _T_110 = shl(_T_109, 1) @[rawFloatFromFN.scala 54:64]
    node _T_111 = xor(_T_107, UInt<12>("hfff")) @[rawFloatFromFN.scala 57:26]
    node _T_112 = mux(_T_3, _T_111, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_113 = mux(_T_3, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _T_114 = or(UInt<11>("h400"), _T_113) @[rawFloatFromFN.scala 60:22]
    node _T_115 = add(_T_112, _T_114) @[rawFloatFromFN.scala 59:15]
    node _T_116 = tail(_T_115, 1) @[rawFloatFromFN.scala 59:15]
    node _T_117 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_118 = bits(_T_116, 11, 10) @[rawFloatFromFN.scala 63:37]
    node _T_119 = eq(_T_118, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire _T_120 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromFN.scala 65:23]
    _T_120 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_121 = eq(_T_4, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _T_122 = and(_T_119, _T_121) @[rawFloatFromFN.scala 66:33]
    _T_120.isNaN <= _T_122 @[rawFloatFromFN.scala 66:20]
    node _T_123 = and(_T_119, _T_4) @[rawFloatFromFN.scala 67:33]
    _T_120.isInf <= _T_123 @[rawFloatFromFN.scala 67:20]
    _T_120.isZero <= _T_117 @[rawFloatFromFN.scala 68:20]
    _T_120.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_124 = bits(_T_116, 11, 0) @[rawFloatFromFN.scala 70:34]
    node _T_125 = cvt(_T_124) @[rawFloatFromFN.scala 70:48]
    _T_120.sExp <= _T_125 @[rawFloatFromFN.scala 70:20]
    node _T_126 = eq(_T_117, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _T_127 = mux(_T_3, _T_110, _T_2) @[rawFloatFromFN.scala 72:42]
    node _T_128 = cat(UInt<1>("h0"), _T_126) @[Cat.scala 29:58]
    node _T_129 = cat(_T_128, _T_127) @[Cat.scala 29:58]
    _T_120.sig <= _T_129 @[rawFloatFromFN.scala 71:17]
    node _T_130 = bits(_T_120.sExp, 11, 9) @[recFNFromFN.scala 48:53]
    node _T_131 = mux(_T_120.isZero, UInt<3>("h0"), _T_130) @[recFNFromFN.scala 48:16]
    node _T_132 = mux(_T_120.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _T_133 = or(_T_131, _T_132) @[recFNFromFN.scala 48:79]
    node _T_134 = bits(_T_120.sExp, 8, 0) @[recFNFromFN.scala 50:23]
    node _T_135 = bits(_T_120.sig, 51, 0) @[recFNFromFN.scala 51:22]
    node _T_136 = cat(_T_134, _T_135) @[Cat.scala 29:58]
    node _T_137 = cat(_T_120.sign, _T_133) @[Cat.scala 29:58]
    node _T_138 = cat(_T_137, _T_136) @[Cat.scala 29:58]
    recFNToRecFN.io.in <= _T_138 @[ValExec_RecFNToRecFN.scala 71:24]
    recFNToRecFN.io.roundingMode <= io.roundingMode @[ValExec_RecFNToRecFN.scala 72:36]
    recFNToRecFN.io.detectTininess <= io.detectTininess @[ValExec_RecFNToRecFN.scala 73:36]
    node _T_139 = bits(io.expected.out, 31, 31) @[rawFloatFromFN.scala 46:22]
    node _T_140 = bits(io.expected.out, 30, 23) @[rawFloatFromFN.scala 47:23]
    node _T_141 = bits(io.expected.out, 22, 0) @[rawFloatFromFN.scala 48:25]
    node _T_142 = eq(_T_140, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node _T_143 = eq(_T_141, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _T_144 = bits(_T_141, 0, 0) @[primitives.scala 92:52]
    node _T_145 = bits(_T_141, 1, 1) @[primitives.scala 92:52]
    node _T_146 = bits(_T_141, 2, 2) @[primitives.scala 92:52]
    node _T_147 = bits(_T_141, 3, 3) @[primitives.scala 92:52]
    node _T_148 = bits(_T_141, 4, 4) @[primitives.scala 92:52]
    node _T_149 = bits(_T_141, 5, 5) @[primitives.scala 92:52]
    node _T_150 = bits(_T_141, 6, 6) @[primitives.scala 92:52]
    node _T_151 = bits(_T_141, 7, 7) @[primitives.scala 92:52]
    node _T_152 = bits(_T_141, 8, 8) @[primitives.scala 92:52]
    node _T_153 = bits(_T_141, 9, 9) @[primitives.scala 92:52]
    node _T_154 = bits(_T_141, 10, 10) @[primitives.scala 92:52]
    node _T_155 = bits(_T_141, 11, 11) @[primitives.scala 92:52]
    node _T_156 = bits(_T_141, 12, 12) @[primitives.scala 92:52]
    node _T_157 = bits(_T_141, 13, 13) @[primitives.scala 92:52]
    node _T_158 = bits(_T_141, 14, 14) @[primitives.scala 92:52]
    node _T_159 = bits(_T_141, 15, 15) @[primitives.scala 92:52]
    node _T_160 = bits(_T_141, 16, 16) @[primitives.scala 92:52]
    node _T_161 = bits(_T_141, 17, 17) @[primitives.scala 92:52]
    node _T_162 = bits(_T_141, 18, 18) @[primitives.scala 92:52]
    node _T_163 = bits(_T_141, 19, 19) @[primitives.scala 92:52]
    node _T_164 = bits(_T_141, 20, 20) @[primitives.scala 92:52]
    node _T_165 = bits(_T_141, 21, 21) @[primitives.scala 92:52]
    node _T_166 = bits(_T_141, 22, 22) @[primitives.scala 92:52]
    node _T_167 = mux(_T_145, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
    node _T_168 = mux(_T_146, UInt<5>("h14"), _T_167) @[Mux.scala 47:69]
    node _T_169 = mux(_T_147, UInt<5>("h13"), _T_168) @[Mux.scala 47:69]
    node _T_170 = mux(_T_148, UInt<5>("h12"), _T_169) @[Mux.scala 47:69]
    node _T_171 = mux(_T_149, UInt<5>("h11"), _T_170) @[Mux.scala 47:69]
    node _T_172 = mux(_T_150, UInt<5>("h10"), _T_171) @[Mux.scala 47:69]
    node _T_173 = mux(_T_151, UInt<4>("hf"), _T_172) @[Mux.scala 47:69]
    node _T_174 = mux(_T_152, UInt<4>("he"), _T_173) @[Mux.scala 47:69]
    node _T_175 = mux(_T_153, UInt<4>("hd"), _T_174) @[Mux.scala 47:69]
    node _T_176 = mux(_T_154, UInt<4>("hc"), _T_175) @[Mux.scala 47:69]
    node _T_177 = mux(_T_155, UInt<4>("hb"), _T_176) @[Mux.scala 47:69]
    node _T_178 = mux(_T_156, UInt<4>("ha"), _T_177) @[Mux.scala 47:69]
    node _T_179 = mux(_T_157, UInt<4>("h9"), _T_178) @[Mux.scala 47:69]
    node _T_180 = mux(_T_158, UInt<4>("h8"), _T_179) @[Mux.scala 47:69]
    node _T_181 = mux(_T_159, UInt<3>("h7"), _T_180) @[Mux.scala 47:69]
    node _T_182 = mux(_T_160, UInt<3>("h6"), _T_181) @[Mux.scala 47:69]
    node _T_183 = mux(_T_161, UInt<3>("h5"), _T_182) @[Mux.scala 47:69]
    node _T_184 = mux(_T_162, UInt<3>("h4"), _T_183) @[Mux.scala 47:69]
    node _T_185 = mux(_T_163, UInt<2>("h3"), _T_184) @[Mux.scala 47:69]
    node _T_186 = mux(_T_164, UInt<2>("h2"), _T_185) @[Mux.scala 47:69]
    node _T_187 = mux(_T_165, UInt<1>("h1"), _T_186) @[Mux.scala 47:69]
    node _T_188 = mux(_T_166, UInt<1>("h0"), _T_187) @[Mux.scala 47:69]
    node _T_189 = dshl(_T_141, _T_188) @[rawFloatFromFN.scala 54:36]
    node _T_190 = bits(_T_189, 21, 0) @[rawFloatFromFN.scala 54:47]
    node _T_191 = shl(_T_190, 1) @[rawFloatFromFN.scala 54:64]
    node _T_192 = xor(_T_188, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
    node _T_193 = mux(_T_142, _T_192, _T_140) @[rawFloatFromFN.scala 56:16]
    node _T_194 = mux(_T_142, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _T_195 = or(UInt<8>("h80"), _T_194) @[rawFloatFromFN.scala 60:22]
    node _T_196 = add(_T_193, _T_195) @[rawFloatFromFN.scala 59:15]
    node _T_197 = tail(_T_196, 1) @[rawFloatFromFN.scala 59:15]
    node _T_198 = and(_T_142, _T_143) @[rawFloatFromFN.scala 62:34]
    node _T_199 = bits(_T_197, 8, 7) @[rawFloatFromFN.scala 63:37]
    node _T_200 = eq(_T_199, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire _T_201 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<10>, sig : UInt<25>} @[rawFloatFromFN.scala 65:23]
    _T_201 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_202 = eq(_T_143, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _T_203 = and(_T_200, _T_202) @[rawFloatFromFN.scala 66:33]
    _T_201.isNaN <= _T_203 @[rawFloatFromFN.scala 66:20]
    node _T_204 = and(_T_200, _T_143) @[rawFloatFromFN.scala 67:33]
    _T_201.isInf <= _T_204 @[rawFloatFromFN.scala 67:20]
    _T_201.isZero <= _T_198 @[rawFloatFromFN.scala 68:20]
    _T_201.sign <= _T_139 @[rawFloatFromFN.scala 69:20]
    node _T_205 = bits(_T_197, 8, 0) @[rawFloatFromFN.scala 70:34]
    node _T_206 = cvt(_T_205) @[rawFloatFromFN.scala 70:48]
    _T_201.sExp <= _T_206 @[rawFloatFromFN.scala 70:20]
    node _T_207 = eq(_T_198, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _T_208 = mux(_T_142, _T_191, _T_141) @[rawFloatFromFN.scala 72:42]
    node _T_209 = cat(UInt<1>("h0"), _T_207) @[Cat.scala 29:58]
    node _T_210 = cat(_T_209, _T_208) @[Cat.scala 29:58]
    _T_201.sig <= _T_210 @[rawFloatFromFN.scala 71:17]
    node _T_211 = bits(_T_201.sExp, 8, 6) @[recFNFromFN.scala 48:53]
    node _T_212 = mux(_T_201.isZero, UInt<3>("h0"), _T_211) @[recFNFromFN.scala 48:16]
    node _T_213 = mux(_T_201.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _T_214 = or(_T_212, _T_213) @[recFNFromFN.scala 48:79]
    node _T_215 = bits(_T_201.sExp, 5, 0) @[recFNFromFN.scala 50:23]
    node _T_216 = bits(_T_201.sig, 22, 0) @[recFNFromFN.scala 51:22]
    node _T_217 = cat(_T_215, _T_216) @[Cat.scala 29:58]
    node _T_218 = cat(_T_201.sign, _T_214) @[Cat.scala 29:58]
    node _T_219 = cat(_T_218, _T_217) @[Cat.scala 29:58]
    io.expected.recOut <= _T_219 @[ValExec_RecFNToRecFN.scala 75:24]
    io.actual.out <= recFNToRecFN.io.out @[ValExec_RecFNToRecFN.scala 78:19]
    io.actual.exceptionFlags <= recFNToRecFN.io.exceptionFlags @[ValExec_RecFNToRecFN.scala 79:30]
    io.check <= UInt<1>("h1") @[ValExec_RecFNToRecFN.scala 81:14]
    node _T_220 = bits(io.actual.out, 32, 29) @[package.scala 46:22]
    node _T_221 = bits(io.expected.recOut, 32, 29) @[package.scala 47:22]
    node _T_222 = bits(_T_220, 2, 0) @[package.scala 48:19]
    node _T_223 = eq(_T_222, UInt<1>("h0")) @[package.scala 48:26]
    node _T_224 = bits(_T_220, 2, 0) @[package.scala 48:44]
    node _T_225 = eq(_T_224, UInt<3>("h7")) @[package.scala 48:51]
    node _T_226 = or(_T_223, _T_225) @[package.scala 48:35]
    node _T_227 = eq(_T_220, _T_221) @[package.scala 49:20]
    node _T_228 = bits(io.actual.out, 22, 0) @[package.scala 49:36]
    node _T_229 = bits(io.expected.recOut, 22, 0) @[package.scala 49:59]
    node _T_230 = eq(_T_228, _T_229) @[package.scala 49:54]
    node _T_231 = and(_T_227, _T_230) @[package.scala 49:31]
    node _T_232 = bits(_T_220, 2, 0) @[package.scala 50:23]
    node _T_233 = eq(_T_232, UInt<3>("h6")) @[package.scala 50:30]
    node _T_234 = eq(_T_220, _T_221) @[package.scala 50:47]
    node _T_235 = eq(io.actual.out, io.expected.recOut) @[package.scala 50:62]
    node _T_236 = mux(_T_233, _T_234, _T_235) @[package.scala 50:16]
    node _T_237 = mux(_T_226, _T_231, _T_236) @[package.scala 48:12]
    node _T_238 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_RecFNToRecFN.scala 85:35]
    node _T_239 = and(_T_237, _T_238) @[ValExec_RecFNToRecFN.scala 84:74]
    io.pass <= _T_239 @[ValExec_RecFNToRecFN.scala 82:13]
