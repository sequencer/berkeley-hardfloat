circuit ValExec_CompareRecFN_lt :
  module CompareRecFN :
    output io : { flip a : UInt<65>, flip b : UInt<65>, flip signaling : UInt<1>, lt : UInt<1>, eq : UInt<1>, gt : UInt<1>, exceptionFlags : UInt<5>}
  
    io is invalid
    node _T = bits(io.a, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _T_1 = bits(_T, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _T_3 = bits(_T, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node _T_4 = eq(_T_3, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire rawA : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromRecFN.scala 54:23]
    rawA is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_5 = bits(_T, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node _T_6 = and(_T_4, _T_5) @[rawFloatFromRecFN.scala 55:33]
    rawA.isNaN <= _T_6 @[rawFloatFromRecFN.scala 55:20]
    node _T_7 = bits(_T, 9, 9) @[rawFloatFromRecFN.scala 56:41]
    node _T_8 = eq(_T_7, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _T_9 = and(_T_4, _T_8) @[rawFloatFromRecFN.scala 56:33]
    rawA.isInf <= _T_9 @[rawFloatFromRecFN.scala 56:20]
    rawA.isZero <= _T_2 @[rawFloatFromRecFN.scala 57:20]
    node _T_10 = bits(io.a, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    rawA.sign <= _T_10 @[rawFloatFromRecFN.scala 58:20]
    node _T_11 = cvt(_T) @[rawFloatFromRecFN.scala 59:27]
    rawA.sExp <= _T_11 @[rawFloatFromRecFN.scala 59:20]
    node _T_12 = eq(_T_2, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _T_13 = bits(io.a, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node _T_14 = cat(UInt<1>("h0"), _T_12) @[Cat.scala 29:58]
    node _T_15 = cat(_T_14, _T_13) @[Cat.scala 29:58]
    rawA.sig <= _T_15 @[rawFloatFromRecFN.scala 60:20]
    node _T_16 = bits(io.b, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _T_17 = bits(_T_16, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node _T_18 = eq(_T_17, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _T_19 = bits(_T_16, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node _T_20 = eq(_T_19, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire rawB : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromRecFN.scala 54:23]
    rawB is invalid @[rawFloatFromRecFN.scala 54:23]
    node _T_21 = bits(_T_16, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node _T_22 = and(_T_20, _T_21) @[rawFloatFromRecFN.scala 55:33]
    rawB.isNaN <= _T_22 @[rawFloatFromRecFN.scala 55:20]
    node _T_23 = bits(_T_16, 9, 9) @[rawFloatFromRecFN.scala 56:41]
    node _T_24 = eq(_T_23, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _T_25 = and(_T_20, _T_24) @[rawFloatFromRecFN.scala 56:33]
    rawB.isInf <= _T_25 @[rawFloatFromRecFN.scala 56:20]
    rawB.isZero <= _T_18 @[rawFloatFromRecFN.scala 57:20]
    node _T_26 = bits(io.b, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    rawB.sign <= _T_26 @[rawFloatFromRecFN.scala 58:20]
    node _T_27 = cvt(_T_16) @[rawFloatFromRecFN.scala 59:27]
    rawB.sExp <= _T_27 @[rawFloatFromRecFN.scala 59:20]
    node _T_28 = eq(_T_18, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _T_29 = bits(io.b, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node _T_30 = cat(UInt<1>("h0"), _T_28) @[Cat.scala 29:58]
    node _T_31 = cat(_T_30, _T_29) @[Cat.scala 29:58]
    rawB.sig <= _T_31 @[rawFloatFromRecFN.scala 60:20]
    node _T_32 = eq(rawA.isNaN, UInt<1>("h0")) @[CompareRecFN.scala 57:19]
    node _T_33 = eq(rawB.isNaN, UInt<1>("h0")) @[CompareRecFN.scala 57:35]
    node ordered = and(_T_32, _T_33) @[CompareRecFN.scala 57:32]
    node bothInfs = and(rawA.isInf, rawB.isInf) @[CompareRecFN.scala 58:33]
    node bothZeros = and(rawA.isZero, rawB.isZero) @[CompareRecFN.scala 59:33]
    node eqExps = eq(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 60:29]
    node _T_34 = lt(rawA.sExp, rawB.sExp) @[CompareRecFN.scala 62:20]
    node _T_35 = lt(rawA.sig, rawB.sig) @[CompareRecFN.scala 62:57]
    node _T_36 = and(eqExps, _T_35) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_T_34, _T_36) @[CompareRecFN.scala 62:33]
    node _T_37 = eq(rawA.sig, rawB.sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _T_37) @[CompareRecFN.scala 63:32]
    node _T_38 = eq(bothZeros, UInt<1>("h0")) @[CompareRecFN.scala 66:9]
    node _T_39 = eq(rawB.sign, UInt<1>("h0")) @[CompareRecFN.scala 67:28]
    node _T_40 = and(rawA.sign, _T_39) @[CompareRecFN.scala 67:25]
    node _T_41 = eq(bothInfs, UInt<1>("h0")) @[CompareRecFN.scala 68:19]
    node _T_42 = eq(common_ltMags, UInt<1>("h0")) @[CompareRecFN.scala 69:38]
    node _T_43 = and(rawA.sign, _T_42) @[CompareRecFN.scala 69:35]
    node _T_44 = eq(common_eqMags, UInt<1>("h0")) @[CompareRecFN.scala 69:57]
    node _T_45 = and(_T_43, _T_44) @[CompareRecFN.scala 69:54]
    node _T_46 = eq(rawB.sign, UInt<1>("h0")) @[CompareRecFN.scala 70:29]
    node _T_47 = and(_T_46, common_ltMags) @[CompareRecFN.scala 70:41]
    node _T_48 = or(_T_45, _T_47) @[CompareRecFN.scala 69:74]
    node _T_49 = and(_T_41, _T_48) @[CompareRecFN.scala 68:30]
    node _T_50 = or(_T_40, _T_49) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_T_38, _T_50) @[CompareRecFN.scala 66:21]
    node _T_51 = eq(rawA.sign, rawB.sign) @[CompareRecFN.scala 72:34]
    node _T_52 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _T_53 = and(_T_51, _T_52) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _T_53) @[CompareRecFN.scala 72:19]
    node _T_54 = bits(rawA.sig, 51, 51) @[common.scala 81:56]
    node _T_55 = eq(_T_54, UInt<1>("h0")) @[common.scala 81:49]
    node _T_56 = and(rawA.isNaN, _T_55) @[common.scala 81:46]
    node _T_57 = bits(rawB.sig, 51, 51) @[common.scala 81:56]
    node _T_58 = eq(_T_57, UInt<1>("h0")) @[common.scala 81:49]
    node _T_59 = and(rawB.isNaN, _T_58) @[common.scala 81:46]
    node _T_60 = or(_T_56, _T_59) @[CompareRecFN.scala 75:32]
    node _T_61 = eq(ordered, UInt<1>("h0")) @[CompareRecFN.scala 76:30]
    node _T_62 = and(io.signaling, _T_61) @[CompareRecFN.scala 76:27]
    node invalid = or(_T_60, _T_62) @[CompareRecFN.scala 75:58]
    node _T_63 = and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io.lt <= _T_63 @[CompareRecFN.scala 78:11]
    node _T_64 = and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    io.eq <= _T_64 @[CompareRecFN.scala 79:11]
    node _T_65 = eq(ordered_lt, UInt<1>("h0")) @[CompareRecFN.scala 80:25]
    node _T_66 = and(ordered, _T_65) @[CompareRecFN.scala 80:22]
    node _T_67 = eq(ordered_eq, UInt<1>("h0")) @[CompareRecFN.scala 80:41]
    node _T_68 = and(_T_66, _T_67) @[CompareRecFN.scala 80:38]
    io.gt <= _T_68 @[CompareRecFN.scala 80:11]
    node _T_69 = cat(invalid, UInt<4>("h0")) @[Cat.scala 29:58]
    io.exceptionFlags <= _T_69 @[CompareRecFN.scala 81:23]

  module ValExec_CompareRecFN_lt :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip a : UInt<64>, flip b : UInt<64>, expected : { flip out : UInt<1>, flip exceptionFlags : UInt<5>}, actual : { out : UInt<1>, exceptionFlags : UInt<5>}, check : UInt<1>, pass : UInt<1>}
  
    clock is invalid
    reset is invalid
    io is invalid
    inst compareRecFN of CompareRecFN @[ValExec_CompareRecFN.scala 60:30]
    compareRecFN.io is invalid
    node _T = bits(io.a, 63, 63) @[rawFloatFromFN.scala 46:22]
    node _T_1 = bits(io.a, 62, 52) @[rawFloatFromFN.scala 47:23]
    node _T_2 = bits(io.a, 51, 0) @[rawFloatFromFN.scala 48:25]
    node _T_3 = eq(_T_1, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node _T_4 = eq(_T_2, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _T_5 = bits(_T_2, 0, 0) @[primitives.scala 92:52]
    node _T_6 = bits(_T_2, 1, 1) @[primitives.scala 92:52]
    node _T_7 = bits(_T_2, 2, 2) @[primitives.scala 92:52]
    node _T_8 = bits(_T_2, 3, 3) @[primitives.scala 92:52]
    node _T_9 = bits(_T_2, 4, 4) @[primitives.scala 92:52]
    node _T_10 = bits(_T_2, 5, 5) @[primitives.scala 92:52]
    node _T_11 = bits(_T_2, 6, 6) @[primitives.scala 92:52]
    node _T_12 = bits(_T_2, 7, 7) @[primitives.scala 92:52]
    node _T_13 = bits(_T_2, 8, 8) @[primitives.scala 92:52]
    node _T_14 = bits(_T_2, 9, 9) @[primitives.scala 92:52]
    node _T_15 = bits(_T_2, 10, 10) @[primitives.scala 92:52]
    node _T_16 = bits(_T_2, 11, 11) @[primitives.scala 92:52]
    node _T_17 = bits(_T_2, 12, 12) @[primitives.scala 92:52]
    node _T_18 = bits(_T_2, 13, 13) @[primitives.scala 92:52]
    node _T_19 = bits(_T_2, 14, 14) @[primitives.scala 92:52]
    node _T_20 = bits(_T_2, 15, 15) @[primitives.scala 92:52]
    node _T_21 = bits(_T_2, 16, 16) @[primitives.scala 92:52]
    node _T_22 = bits(_T_2, 17, 17) @[primitives.scala 92:52]
    node _T_23 = bits(_T_2, 18, 18) @[primitives.scala 92:52]
    node _T_24 = bits(_T_2, 19, 19) @[primitives.scala 92:52]
    node _T_25 = bits(_T_2, 20, 20) @[primitives.scala 92:52]
    node _T_26 = bits(_T_2, 21, 21) @[primitives.scala 92:52]
    node _T_27 = bits(_T_2, 22, 22) @[primitives.scala 92:52]
    node _T_28 = bits(_T_2, 23, 23) @[primitives.scala 92:52]
    node _T_29 = bits(_T_2, 24, 24) @[primitives.scala 92:52]
    node _T_30 = bits(_T_2, 25, 25) @[primitives.scala 92:52]
    node _T_31 = bits(_T_2, 26, 26) @[primitives.scala 92:52]
    node _T_32 = bits(_T_2, 27, 27) @[primitives.scala 92:52]
    node _T_33 = bits(_T_2, 28, 28) @[primitives.scala 92:52]
    node _T_34 = bits(_T_2, 29, 29) @[primitives.scala 92:52]
    node _T_35 = bits(_T_2, 30, 30) @[primitives.scala 92:52]
    node _T_36 = bits(_T_2, 31, 31) @[primitives.scala 92:52]
    node _T_37 = bits(_T_2, 32, 32) @[primitives.scala 92:52]
    node _T_38 = bits(_T_2, 33, 33) @[primitives.scala 92:52]
    node _T_39 = bits(_T_2, 34, 34) @[primitives.scala 92:52]
    node _T_40 = bits(_T_2, 35, 35) @[primitives.scala 92:52]
    node _T_41 = bits(_T_2, 36, 36) @[primitives.scala 92:52]
    node _T_42 = bits(_T_2, 37, 37) @[primitives.scala 92:52]
    node _T_43 = bits(_T_2, 38, 38) @[primitives.scala 92:52]
    node _T_44 = bits(_T_2, 39, 39) @[primitives.scala 92:52]
    node _T_45 = bits(_T_2, 40, 40) @[primitives.scala 92:52]
    node _T_46 = bits(_T_2, 41, 41) @[primitives.scala 92:52]
    node _T_47 = bits(_T_2, 42, 42) @[primitives.scala 92:52]
    node _T_48 = bits(_T_2, 43, 43) @[primitives.scala 92:52]
    node _T_49 = bits(_T_2, 44, 44) @[primitives.scala 92:52]
    node _T_50 = bits(_T_2, 45, 45) @[primitives.scala 92:52]
    node _T_51 = bits(_T_2, 46, 46) @[primitives.scala 92:52]
    node _T_52 = bits(_T_2, 47, 47) @[primitives.scala 92:52]
    node _T_53 = bits(_T_2, 48, 48) @[primitives.scala 92:52]
    node _T_54 = bits(_T_2, 49, 49) @[primitives.scala 92:52]
    node _T_55 = bits(_T_2, 50, 50) @[primitives.scala 92:52]
    node _T_56 = bits(_T_2, 51, 51) @[primitives.scala 92:52]
    node _T_57 = mux(_T_6, UInt<6>("h32"), UInt<6>("h33")) @[Mux.scala 47:69]
    node _T_58 = mux(_T_7, UInt<6>("h31"), _T_57) @[Mux.scala 47:69]
    node _T_59 = mux(_T_8, UInt<6>("h30"), _T_58) @[Mux.scala 47:69]
    node _T_60 = mux(_T_9, UInt<6>("h2f"), _T_59) @[Mux.scala 47:69]
    node _T_61 = mux(_T_10, UInt<6>("h2e"), _T_60) @[Mux.scala 47:69]
    node _T_62 = mux(_T_11, UInt<6>("h2d"), _T_61) @[Mux.scala 47:69]
    node _T_63 = mux(_T_12, UInt<6>("h2c"), _T_62) @[Mux.scala 47:69]
    node _T_64 = mux(_T_13, UInt<6>("h2b"), _T_63) @[Mux.scala 47:69]
    node _T_65 = mux(_T_14, UInt<6>("h2a"), _T_64) @[Mux.scala 47:69]
    node _T_66 = mux(_T_15, UInt<6>("h29"), _T_65) @[Mux.scala 47:69]
    node _T_67 = mux(_T_16, UInt<6>("h28"), _T_66) @[Mux.scala 47:69]
    node _T_68 = mux(_T_17, UInt<6>("h27"), _T_67) @[Mux.scala 47:69]
    node _T_69 = mux(_T_18, UInt<6>("h26"), _T_68) @[Mux.scala 47:69]
    node _T_70 = mux(_T_19, UInt<6>("h25"), _T_69) @[Mux.scala 47:69]
    node _T_71 = mux(_T_20, UInt<6>("h24"), _T_70) @[Mux.scala 47:69]
    node _T_72 = mux(_T_21, UInt<6>("h23"), _T_71) @[Mux.scala 47:69]
    node _T_73 = mux(_T_22, UInt<6>("h22"), _T_72) @[Mux.scala 47:69]
    node _T_74 = mux(_T_23, UInt<6>("h21"), _T_73) @[Mux.scala 47:69]
    node _T_75 = mux(_T_24, UInt<6>("h20"), _T_74) @[Mux.scala 47:69]
    node _T_76 = mux(_T_25, UInt<5>("h1f"), _T_75) @[Mux.scala 47:69]
    node _T_77 = mux(_T_26, UInt<5>("h1e"), _T_76) @[Mux.scala 47:69]
    node _T_78 = mux(_T_27, UInt<5>("h1d"), _T_77) @[Mux.scala 47:69]
    node _T_79 = mux(_T_28, UInt<5>("h1c"), _T_78) @[Mux.scala 47:69]
    node _T_80 = mux(_T_29, UInt<5>("h1b"), _T_79) @[Mux.scala 47:69]
    node _T_81 = mux(_T_30, UInt<5>("h1a"), _T_80) @[Mux.scala 47:69]
    node _T_82 = mux(_T_31, UInt<5>("h19"), _T_81) @[Mux.scala 47:69]
    node _T_83 = mux(_T_32, UInt<5>("h18"), _T_82) @[Mux.scala 47:69]
    node _T_84 = mux(_T_33, UInt<5>("h17"), _T_83) @[Mux.scala 47:69]
    node _T_85 = mux(_T_34, UInt<5>("h16"), _T_84) @[Mux.scala 47:69]
    node _T_86 = mux(_T_35, UInt<5>("h15"), _T_85) @[Mux.scala 47:69]
    node _T_87 = mux(_T_36, UInt<5>("h14"), _T_86) @[Mux.scala 47:69]
    node _T_88 = mux(_T_37, UInt<5>("h13"), _T_87) @[Mux.scala 47:69]
    node _T_89 = mux(_T_38, UInt<5>("h12"), _T_88) @[Mux.scala 47:69]
    node _T_90 = mux(_T_39, UInt<5>("h11"), _T_89) @[Mux.scala 47:69]
    node _T_91 = mux(_T_40, UInt<5>("h10"), _T_90) @[Mux.scala 47:69]
    node _T_92 = mux(_T_41, UInt<4>("hf"), _T_91) @[Mux.scala 47:69]
    node _T_93 = mux(_T_42, UInt<4>("he"), _T_92) @[Mux.scala 47:69]
    node _T_94 = mux(_T_43, UInt<4>("hd"), _T_93) @[Mux.scala 47:69]
    node _T_95 = mux(_T_44, UInt<4>("hc"), _T_94) @[Mux.scala 47:69]
    node _T_96 = mux(_T_45, UInt<4>("hb"), _T_95) @[Mux.scala 47:69]
    node _T_97 = mux(_T_46, UInt<4>("ha"), _T_96) @[Mux.scala 47:69]
    node _T_98 = mux(_T_47, UInt<4>("h9"), _T_97) @[Mux.scala 47:69]
    node _T_99 = mux(_T_48, UInt<4>("h8"), _T_98) @[Mux.scala 47:69]
    node _T_100 = mux(_T_49, UInt<3>("h7"), _T_99) @[Mux.scala 47:69]
    node _T_101 = mux(_T_50, UInt<3>("h6"), _T_100) @[Mux.scala 47:69]
    node _T_102 = mux(_T_51, UInt<3>("h5"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_52, UInt<3>("h4"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_53, UInt<2>("h3"), _T_103) @[Mux.scala 47:69]
    node _T_105 = mux(_T_54, UInt<2>("h2"), _T_104) @[Mux.scala 47:69]
    node _T_106 = mux(_T_55, UInt<1>("h1"), _T_105) @[Mux.scala 47:69]
    node _T_107 = mux(_T_56, UInt<1>("h0"), _T_106) @[Mux.scala 47:69]
    node _T_108 = dshl(_T_2, _T_107) @[rawFloatFromFN.scala 54:36]
    node _T_109 = bits(_T_108, 50, 0) @[rawFloatFromFN.scala 54:47]
    node _T_110 = shl(_T_109, 1) @[rawFloatFromFN.scala 54:64]
    node _T_111 = xor(_T_107, UInt<12>("hfff")) @[rawFloatFromFN.scala 57:26]
    node _T_112 = mux(_T_3, _T_111, _T_1) @[rawFloatFromFN.scala 56:16]
    node _T_113 = mux(_T_3, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _T_114 = or(UInt<11>("h400"), _T_113) @[rawFloatFromFN.scala 60:22]
    node _T_115 = add(_T_112, _T_114) @[rawFloatFromFN.scala 59:15]
    node _T_116 = tail(_T_115, 1) @[rawFloatFromFN.scala 59:15]
    node _T_117 = and(_T_3, _T_4) @[rawFloatFromFN.scala 62:34]
    node _T_118 = bits(_T_116, 11, 10) @[rawFloatFromFN.scala 63:37]
    node _T_119 = eq(_T_118, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire _T_120 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromFN.scala 65:23]
    _T_120 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_121 = eq(_T_4, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _T_122 = and(_T_119, _T_121) @[rawFloatFromFN.scala 66:33]
    _T_120.isNaN <= _T_122 @[rawFloatFromFN.scala 66:20]
    node _T_123 = and(_T_119, _T_4) @[rawFloatFromFN.scala 67:33]
    _T_120.isInf <= _T_123 @[rawFloatFromFN.scala 67:20]
    _T_120.isZero <= _T_117 @[rawFloatFromFN.scala 68:20]
    _T_120.sign <= _T @[rawFloatFromFN.scala 69:20]
    node _T_124 = bits(_T_116, 11, 0) @[rawFloatFromFN.scala 70:34]
    node _T_125 = cvt(_T_124) @[rawFloatFromFN.scala 70:48]
    _T_120.sExp <= _T_125 @[rawFloatFromFN.scala 70:20]
    node _T_126 = eq(_T_117, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _T_127 = mux(_T_3, _T_110, _T_2) @[rawFloatFromFN.scala 72:42]
    node _T_128 = cat(UInt<1>("h0"), _T_126) @[Cat.scala 29:58]
    node _T_129 = cat(_T_128, _T_127) @[Cat.scala 29:58]
    _T_120.sig <= _T_129 @[rawFloatFromFN.scala 71:17]
    node _T_130 = bits(_T_120.sExp, 11, 9) @[recFNFromFN.scala 48:53]
    node _T_131 = mux(_T_120.isZero, UInt<3>("h0"), _T_130) @[recFNFromFN.scala 48:16]
    node _T_132 = mux(_T_120.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _T_133 = or(_T_131, _T_132) @[recFNFromFN.scala 48:79]
    node _T_134 = bits(_T_120.sExp, 8, 0) @[recFNFromFN.scala 50:23]
    node _T_135 = bits(_T_120.sig, 51, 0) @[recFNFromFN.scala 51:22]
    node _T_136 = cat(_T_134, _T_135) @[Cat.scala 29:58]
    node _T_137 = cat(_T_120.sign, _T_133) @[Cat.scala 29:58]
    node _T_138 = cat(_T_137, _T_136) @[Cat.scala 29:58]
    compareRecFN.io.a <= _T_138 @[ValExec_CompareRecFN.scala 61:23]
    node _T_139 = bits(io.b, 63, 63) @[rawFloatFromFN.scala 46:22]
    node _T_140 = bits(io.b, 62, 52) @[rawFloatFromFN.scala 47:23]
    node _T_141 = bits(io.b, 51, 0) @[rawFloatFromFN.scala 48:25]
    node _T_142 = eq(_T_140, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node _T_143 = eq(_T_141, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _T_144 = bits(_T_141, 0, 0) @[primitives.scala 92:52]
    node _T_145 = bits(_T_141, 1, 1) @[primitives.scala 92:52]
    node _T_146 = bits(_T_141, 2, 2) @[primitives.scala 92:52]
    node _T_147 = bits(_T_141, 3, 3) @[primitives.scala 92:52]
    node _T_148 = bits(_T_141, 4, 4) @[primitives.scala 92:52]
    node _T_149 = bits(_T_141, 5, 5) @[primitives.scala 92:52]
    node _T_150 = bits(_T_141, 6, 6) @[primitives.scala 92:52]
    node _T_151 = bits(_T_141, 7, 7) @[primitives.scala 92:52]
    node _T_152 = bits(_T_141, 8, 8) @[primitives.scala 92:52]
    node _T_153 = bits(_T_141, 9, 9) @[primitives.scala 92:52]
    node _T_154 = bits(_T_141, 10, 10) @[primitives.scala 92:52]
    node _T_155 = bits(_T_141, 11, 11) @[primitives.scala 92:52]
    node _T_156 = bits(_T_141, 12, 12) @[primitives.scala 92:52]
    node _T_157 = bits(_T_141, 13, 13) @[primitives.scala 92:52]
    node _T_158 = bits(_T_141, 14, 14) @[primitives.scala 92:52]
    node _T_159 = bits(_T_141, 15, 15) @[primitives.scala 92:52]
    node _T_160 = bits(_T_141, 16, 16) @[primitives.scala 92:52]
    node _T_161 = bits(_T_141, 17, 17) @[primitives.scala 92:52]
    node _T_162 = bits(_T_141, 18, 18) @[primitives.scala 92:52]
    node _T_163 = bits(_T_141, 19, 19) @[primitives.scala 92:52]
    node _T_164 = bits(_T_141, 20, 20) @[primitives.scala 92:52]
    node _T_165 = bits(_T_141, 21, 21) @[primitives.scala 92:52]
    node _T_166 = bits(_T_141, 22, 22) @[primitives.scala 92:52]
    node _T_167 = bits(_T_141, 23, 23) @[primitives.scala 92:52]
    node _T_168 = bits(_T_141, 24, 24) @[primitives.scala 92:52]
    node _T_169 = bits(_T_141, 25, 25) @[primitives.scala 92:52]
    node _T_170 = bits(_T_141, 26, 26) @[primitives.scala 92:52]
    node _T_171 = bits(_T_141, 27, 27) @[primitives.scala 92:52]
    node _T_172 = bits(_T_141, 28, 28) @[primitives.scala 92:52]
    node _T_173 = bits(_T_141, 29, 29) @[primitives.scala 92:52]
    node _T_174 = bits(_T_141, 30, 30) @[primitives.scala 92:52]
    node _T_175 = bits(_T_141, 31, 31) @[primitives.scala 92:52]
    node _T_176 = bits(_T_141, 32, 32) @[primitives.scala 92:52]
    node _T_177 = bits(_T_141, 33, 33) @[primitives.scala 92:52]
    node _T_178 = bits(_T_141, 34, 34) @[primitives.scala 92:52]
    node _T_179 = bits(_T_141, 35, 35) @[primitives.scala 92:52]
    node _T_180 = bits(_T_141, 36, 36) @[primitives.scala 92:52]
    node _T_181 = bits(_T_141, 37, 37) @[primitives.scala 92:52]
    node _T_182 = bits(_T_141, 38, 38) @[primitives.scala 92:52]
    node _T_183 = bits(_T_141, 39, 39) @[primitives.scala 92:52]
    node _T_184 = bits(_T_141, 40, 40) @[primitives.scala 92:52]
    node _T_185 = bits(_T_141, 41, 41) @[primitives.scala 92:52]
    node _T_186 = bits(_T_141, 42, 42) @[primitives.scala 92:52]
    node _T_187 = bits(_T_141, 43, 43) @[primitives.scala 92:52]
    node _T_188 = bits(_T_141, 44, 44) @[primitives.scala 92:52]
    node _T_189 = bits(_T_141, 45, 45) @[primitives.scala 92:52]
    node _T_190 = bits(_T_141, 46, 46) @[primitives.scala 92:52]
    node _T_191 = bits(_T_141, 47, 47) @[primitives.scala 92:52]
    node _T_192 = bits(_T_141, 48, 48) @[primitives.scala 92:52]
    node _T_193 = bits(_T_141, 49, 49) @[primitives.scala 92:52]
    node _T_194 = bits(_T_141, 50, 50) @[primitives.scala 92:52]
    node _T_195 = bits(_T_141, 51, 51) @[primitives.scala 92:52]
    node _T_196 = mux(_T_145, UInt<6>("h32"), UInt<6>("h33")) @[Mux.scala 47:69]
    node _T_197 = mux(_T_146, UInt<6>("h31"), _T_196) @[Mux.scala 47:69]
    node _T_198 = mux(_T_147, UInt<6>("h30"), _T_197) @[Mux.scala 47:69]
    node _T_199 = mux(_T_148, UInt<6>("h2f"), _T_198) @[Mux.scala 47:69]
    node _T_200 = mux(_T_149, UInt<6>("h2e"), _T_199) @[Mux.scala 47:69]
    node _T_201 = mux(_T_150, UInt<6>("h2d"), _T_200) @[Mux.scala 47:69]
    node _T_202 = mux(_T_151, UInt<6>("h2c"), _T_201) @[Mux.scala 47:69]
    node _T_203 = mux(_T_152, UInt<6>("h2b"), _T_202) @[Mux.scala 47:69]
    node _T_204 = mux(_T_153, UInt<6>("h2a"), _T_203) @[Mux.scala 47:69]
    node _T_205 = mux(_T_154, UInt<6>("h29"), _T_204) @[Mux.scala 47:69]
    node _T_206 = mux(_T_155, UInt<6>("h28"), _T_205) @[Mux.scala 47:69]
    node _T_207 = mux(_T_156, UInt<6>("h27"), _T_206) @[Mux.scala 47:69]
    node _T_208 = mux(_T_157, UInt<6>("h26"), _T_207) @[Mux.scala 47:69]
    node _T_209 = mux(_T_158, UInt<6>("h25"), _T_208) @[Mux.scala 47:69]
    node _T_210 = mux(_T_159, UInt<6>("h24"), _T_209) @[Mux.scala 47:69]
    node _T_211 = mux(_T_160, UInt<6>("h23"), _T_210) @[Mux.scala 47:69]
    node _T_212 = mux(_T_161, UInt<6>("h22"), _T_211) @[Mux.scala 47:69]
    node _T_213 = mux(_T_162, UInt<6>("h21"), _T_212) @[Mux.scala 47:69]
    node _T_214 = mux(_T_163, UInt<6>("h20"), _T_213) @[Mux.scala 47:69]
    node _T_215 = mux(_T_164, UInt<5>("h1f"), _T_214) @[Mux.scala 47:69]
    node _T_216 = mux(_T_165, UInt<5>("h1e"), _T_215) @[Mux.scala 47:69]
    node _T_217 = mux(_T_166, UInt<5>("h1d"), _T_216) @[Mux.scala 47:69]
    node _T_218 = mux(_T_167, UInt<5>("h1c"), _T_217) @[Mux.scala 47:69]
    node _T_219 = mux(_T_168, UInt<5>("h1b"), _T_218) @[Mux.scala 47:69]
    node _T_220 = mux(_T_169, UInt<5>("h1a"), _T_219) @[Mux.scala 47:69]
    node _T_221 = mux(_T_170, UInt<5>("h19"), _T_220) @[Mux.scala 47:69]
    node _T_222 = mux(_T_171, UInt<5>("h18"), _T_221) @[Mux.scala 47:69]
    node _T_223 = mux(_T_172, UInt<5>("h17"), _T_222) @[Mux.scala 47:69]
    node _T_224 = mux(_T_173, UInt<5>("h16"), _T_223) @[Mux.scala 47:69]
    node _T_225 = mux(_T_174, UInt<5>("h15"), _T_224) @[Mux.scala 47:69]
    node _T_226 = mux(_T_175, UInt<5>("h14"), _T_225) @[Mux.scala 47:69]
    node _T_227 = mux(_T_176, UInt<5>("h13"), _T_226) @[Mux.scala 47:69]
    node _T_228 = mux(_T_177, UInt<5>("h12"), _T_227) @[Mux.scala 47:69]
    node _T_229 = mux(_T_178, UInt<5>("h11"), _T_228) @[Mux.scala 47:69]
    node _T_230 = mux(_T_179, UInt<5>("h10"), _T_229) @[Mux.scala 47:69]
    node _T_231 = mux(_T_180, UInt<4>("hf"), _T_230) @[Mux.scala 47:69]
    node _T_232 = mux(_T_181, UInt<4>("he"), _T_231) @[Mux.scala 47:69]
    node _T_233 = mux(_T_182, UInt<4>("hd"), _T_232) @[Mux.scala 47:69]
    node _T_234 = mux(_T_183, UInt<4>("hc"), _T_233) @[Mux.scala 47:69]
    node _T_235 = mux(_T_184, UInt<4>("hb"), _T_234) @[Mux.scala 47:69]
    node _T_236 = mux(_T_185, UInt<4>("ha"), _T_235) @[Mux.scala 47:69]
    node _T_237 = mux(_T_186, UInt<4>("h9"), _T_236) @[Mux.scala 47:69]
    node _T_238 = mux(_T_187, UInt<4>("h8"), _T_237) @[Mux.scala 47:69]
    node _T_239 = mux(_T_188, UInt<3>("h7"), _T_238) @[Mux.scala 47:69]
    node _T_240 = mux(_T_189, UInt<3>("h6"), _T_239) @[Mux.scala 47:69]
    node _T_241 = mux(_T_190, UInt<3>("h5"), _T_240) @[Mux.scala 47:69]
    node _T_242 = mux(_T_191, UInt<3>("h4"), _T_241) @[Mux.scala 47:69]
    node _T_243 = mux(_T_192, UInt<2>("h3"), _T_242) @[Mux.scala 47:69]
    node _T_244 = mux(_T_193, UInt<2>("h2"), _T_243) @[Mux.scala 47:69]
    node _T_245 = mux(_T_194, UInt<1>("h1"), _T_244) @[Mux.scala 47:69]
    node _T_246 = mux(_T_195, UInt<1>("h0"), _T_245) @[Mux.scala 47:69]
    node _T_247 = dshl(_T_141, _T_246) @[rawFloatFromFN.scala 54:36]
    node _T_248 = bits(_T_247, 50, 0) @[rawFloatFromFN.scala 54:47]
    node _T_249 = shl(_T_248, 1) @[rawFloatFromFN.scala 54:64]
    node _T_250 = xor(_T_246, UInt<12>("hfff")) @[rawFloatFromFN.scala 57:26]
    node _T_251 = mux(_T_142, _T_250, _T_140) @[rawFloatFromFN.scala 56:16]
    node _T_252 = mux(_T_142, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _T_253 = or(UInt<11>("h400"), _T_252) @[rawFloatFromFN.scala 60:22]
    node _T_254 = add(_T_251, _T_253) @[rawFloatFromFN.scala 59:15]
    node _T_255 = tail(_T_254, 1) @[rawFloatFromFN.scala 59:15]
    node _T_256 = and(_T_142, _T_143) @[rawFloatFromFN.scala 62:34]
    node _T_257 = bits(_T_255, 11, 10) @[rawFloatFromFN.scala 63:37]
    node _T_258 = eq(_T_257, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire _T_259 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<13>, sig : UInt<54>} @[rawFloatFromFN.scala 65:23]
    _T_259 is invalid @[rawFloatFromFN.scala 65:23]
    node _T_260 = eq(_T_143, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _T_261 = and(_T_258, _T_260) @[rawFloatFromFN.scala 66:33]
    _T_259.isNaN <= _T_261 @[rawFloatFromFN.scala 66:20]
    node _T_262 = and(_T_258, _T_143) @[rawFloatFromFN.scala 67:33]
    _T_259.isInf <= _T_262 @[rawFloatFromFN.scala 67:20]
    _T_259.isZero <= _T_256 @[rawFloatFromFN.scala 68:20]
    _T_259.sign <= _T_139 @[rawFloatFromFN.scala 69:20]
    node _T_263 = bits(_T_255, 11, 0) @[rawFloatFromFN.scala 70:34]
    node _T_264 = cvt(_T_263) @[rawFloatFromFN.scala 70:48]
    _T_259.sExp <= _T_264 @[rawFloatFromFN.scala 70:20]
    node _T_265 = eq(_T_256, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _T_266 = mux(_T_142, _T_249, _T_141) @[rawFloatFromFN.scala 72:42]
    node _T_267 = cat(UInt<1>("h0"), _T_265) @[Cat.scala 29:58]
    node _T_268 = cat(_T_267, _T_266) @[Cat.scala 29:58]
    _T_259.sig <= _T_268 @[rawFloatFromFN.scala 71:17]
    node _T_269 = bits(_T_259.sExp, 11, 9) @[recFNFromFN.scala 48:53]
    node _T_270 = mux(_T_259.isZero, UInt<3>("h0"), _T_269) @[recFNFromFN.scala 48:16]
    node _T_271 = mux(_T_259.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _T_272 = or(_T_270, _T_271) @[recFNFromFN.scala 48:79]
    node _T_273 = bits(_T_259.sExp, 8, 0) @[recFNFromFN.scala 50:23]
    node _T_274 = bits(_T_259.sig, 51, 0) @[recFNFromFN.scala 51:22]
    node _T_275 = cat(_T_273, _T_274) @[Cat.scala 29:58]
    node _T_276 = cat(_T_259.sign, _T_272) @[Cat.scala 29:58]
    node _T_277 = cat(_T_276, _T_275) @[Cat.scala 29:58]
    compareRecFN.io.b <= _T_277 @[ValExec_CompareRecFN.scala 62:23]
    compareRecFN.io.signaling <= UInt<1>("h1") @[ValExec_CompareRecFN.scala 63:31]
    io.actual.out <= compareRecFN.io.lt @[ValExec_CompareRecFN.scala 65:19]
    io.actual.exceptionFlags <= compareRecFN.io.exceptionFlags @[ValExec_CompareRecFN.scala 66:30]
    io.check <= UInt<1>("h1") @[ValExec_CompareRecFN.scala 68:14]
    node _T_278 = eq(io.actual.out, io.expected.out) @[ValExec_CompareRecFN.scala 70:24]
    node _T_279 = eq(io.actual.exceptionFlags, io.expected.exceptionFlags) @[ValExec_CompareRecFN.scala 71:35]
    node _T_280 = and(_T_278, _T_279) @[ValExec_CompareRecFN.scala 70:45]
    io.pass <= _T_280 @[ValExec_CompareRecFN.scala 69:13]
